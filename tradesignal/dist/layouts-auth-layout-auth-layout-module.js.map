{"version":3,"sources":["./src/app/pages/login/login.component.html","./src/app/pages/register/register.component.html","./src/app/pages/resetpassword/resetpassword.component.html","./src/app/layouts/auth-layout/auth-layout.module.ts","./src/app/layouts/auth-layout/auth-layout.routing.ts","./src/app/pages/login/login.component.scss","./src/app/pages/login/login.component.ts","./src/app/pages/register/register.component.scss","./src/app/pages/register/register.component.ts","./src/app/pages/resetpassword/resetpassword.component.css","./src/app/pages/resetpassword/resetpassword.component.ts"],"names":[],"mappings":"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","file":"layouts-auth-layout-auth-layout-module.js","sourcesContent":["export default \"<div class=\\\"header py-7 py-lg-8\\\">\\r\\n    <!-- <div class=\\\"header bg-gradient-danger py-7 py-lg-8\\\"> old style and css gradient-->\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"header-body text-center mb-7\\\">\\r\\n      <div class=\\\"row justify-content-center\\\">\\r\\n        <div class=\\\"col-lg-5 col-md-6\\\">\\r\\n          <h1 class=\\\"text-white\\\">TRADESIGNAL.IO</h1>\\r\\n          <!-- <p class=\\\"text-lead text-blue\\\"> login or create new account .</p> -->\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"separator separator-bottom separator-skew zindex-100\\\">\\r\\n    <svg x=\\\"0\\\" y=\\\"0\\\" viewBox=\\\"0 0 2560 100\\\" preserveAspectRatio=\\\"none\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\r\\n      <polygon class=\\\"fill-default\\\" points=\\\"2560 0 2560 100 0 100\\\"></polygon>\\r\\n    </svg>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Page content -->\\r\\n<div class=\\\"container mt--8 pb-5\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-5 col-md-7\\\">\\r\\n      \\r\\n      <div class=\\\"card bg-secondary shadow border-0\\\">\\r\\n\\r\\n        <div class=\\\"card-body px-lg-5 py-lg-5\\\">\\r\\n          <div class=\\\"text-center text-muted mb-4\\\">\\r\\n            <small> sign in </small>\\r\\n          </div>\\r\\n          <form [formGroup]=\\\"loginForm\\\">\\r\\n            <div class=\\\"form-group mb-3\\\">\\r\\n              <div class=\\\"input-group input-group-alternative\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-email-83\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Enter Email\\\" name=\\\"email\\\" id=\\\"email\\\" required\\r\\n                  formControlName=\\\"email\\\">\\r\\n              </div>\\r\\n              <div>\\r\\n                <ng-container *ngFor=\\\"let error of error_messages.email\\\">\\r\\n                  <div class=\\\"error-message\\\" *ngIf=\\\"loginForm.get('email').hasError(error.type) &&\\r\\n                    (loginForm.get('email').dirty || loginForm.get('email').touched)\\\">\\r\\n                    {{ error.message }}\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"input-group input-group-alternative\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-lock-circle-open\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control\\\" type=\\\"password\\\" placeholder=\\\"Enter Password\\\" name=\\\"psw\\\" id=\\\"psw\\\" required\\r\\n                  formControlName=\\\"password\\\">\\r\\n              </div>\\r\\n              <div>\\r\\n                <ng-container *ngFor=\\\"let error of error_messages.password\\\">\\r\\n                  <div class=\\\"error-message\\\"\\r\\n                    *ngIf=\\\"loginForm.get('password').hasError(error.type) && (loginForm.get('password').dirty || loginForm.get('password').touched)\\\">\\r\\n                    {{ error.message }}\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"custom-control custom-control-alternative custom-checkbox\\\">\\r\\n              <input class=\\\"custom-control-input\\\" id=\\\" customCheckLogin\\\" type=\\\"checkbox\\\">\\r\\n              <label class=\\\"custom-control-label\\\" for=\\\" customCheckLogin\\\">\\r\\n                <span class=\\\"text-muted\\\">Remember me</span>\\r\\n              </label>\\r\\n            </div>\\r\\n            <div class=\\\"text-center\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary my-4\\\" (click)=\\\"doLogin()\\\">Sign In</button>\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary my-4\\\" (click)=\\\"doLogin()\\\">Sign Up</button>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n\\r\\n        <!-- <div class=\\\"row mt-3\\\">\\r\\n            <div class=\\\"col-6\\\">\\r\\n              <a [routerLink]=\\\"['/reset']\\\" class=\\\"text-light\\\"><small>Forgot password?</small></a>\\r\\n            </div>\\r\\n            <div class=\\\"col-6 text-right\\\">\\r\\n              <a [routerLink]=\\\"['/register']\\\" class=\\\"text-light\\\"><small>Create new account</small></a>\\r\\n            </div>\\r\\n          </div> -->\\r\\n          \\r\\n      </div>\\r\\n      <div class=\\\"row mt-3\\\">\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <a [routerLink]=\\\"['/reset']\\\" class=\\\"text-light\\\"><small>Forgot password?</small></a>\\r\\n        </div>\\r\\n        <div class=\\\"col-6 text-right\\\">\\r\\n          <a [routerLink]=\\\"['/register']\\\" class=\\\"text-light\\\"><small>Create new account</small></a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"header bg-gradient-danger py-7 py-lg-8\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"header-body text-center mb-7\\\">\\r\\n      <div class=\\\"row justify-content-center\\\">\\r\\n        <div class=\\\"col-lg-5 col-md-6\\\">\\r\\n          <h1 class=\\\"text-blue\\\">Welcome!</h1>\\r\\n          <p class=\\\"text-lead text-blue\\\"> login or create new account .</p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"separator separator-bottom separator-skew zindex-100\\\">\\r\\n    <svg x=\\\"0\\\" y=\\\"0\\\" viewBox=\\\"0 0 2560 100\\\" preserveAspectRatio=\\\"none\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\r\\n      <polygon class=\\\"fill-default\\\" points=\\\"2560 0 2560 100 0 100\\\"></polygon>\\r\\n    </svg>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Page content -->\\r\\n<div class=\\\"container mt--8 pb-5\\\">\\r\\n  <!-- Table -->\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-6 col-md-8\\\">\\r\\n      <div class=\\\"card bg-secondary shadow border-0\\\">\\r\\n\\r\\n        <div class=\\\"card-body px-lg-5 py-lg-5\\\">\\r\\n          <div class=\\\"text-center text-muted mb-4\\\">\\r\\n            <small> sign up </small>\\r\\n          </div>\\r\\n          <form [formGroup]=\\\"signUpForm\\\" (ngSubmit)=\\\"doRegister()\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"input-group input-group-alternative mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-hat-3\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Enter First Name\\\" name=\\\"fname\\\" id=\\\"fname\\\" required\\r\\n                  formControlName=\\\"fname\\\">\\r\\n              </div>\\r\\n              <div>\\r\\n                <ng-container *ngFor=\\\"let error of error_messages.fname\\\">\\r\\n                  <div class=\\\"error-message\\\" *ngIf=\\\"signUpForm.get('fname').hasError(error.type) &&\\r\\n            (signUpForm.get('fname').dirty || signUpForm.get('fname').touched)\\\">\\r\\n                    {{ error.message }}\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"input-group input-group-alternative mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-hat-3\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Enter Last Name\\\" name=\\\"lname\\\" id=\\\"lname\\\" required\\r\\n                  formControlName=\\\"lname\\\">\\r\\n              </div>\\r\\n              <div>\\r\\n                <ng-container *ngFor=\\\"let error of error_messages.lname\\\">\\r\\n                  <div class=\\\"error-message\\\" *ngIf=\\\"signUpForm.get('lname').hasError(error.type) &&\\r\\n            (signUpForm.get('lname').dirty || signUpForm.get('lname').touched)\\\">\\r\\n                    {{ error.message }}\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"input-group input-group-alternative mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-hat-3\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Enter mobile\\\" name=\\\"mobile\\\" id=\\\"mobile\\\" required\\r\\n                  formControlName=\\\"mobile\\\">\\r\\n              </div>\\r\\n              <div>\\r\\n                <ng-container *ngFor=\\\"let error of error_messages.mobile\\\">\\r\\n                  <div class=\\\"error-message\\\" *ngIf=\\\"signUpForm.get('mobile').hasError(error.type) &&\\r\\n            (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched)\\\">\\r\\n                    {{ error.message }}\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"input-group input-group-alternative mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-email-83\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Enter Email\\\" name=\\\"email\\\" id=\\\"email\\\" required\\r\\n                  formControlName=\\\"email\\\">\\r\\n              </div>\\r\\n              <div>\\r\\n                <ng-container *ngFor=\\\"let error of error_messages.email\\\">\\r\\n                  <div class=\\\"error-message\\\" *ngIf=\\\"signUpForm.get('email').hasError(error.type) &&\\r\\n            (signUpForm.get('email').dirty || signUpForm.get('email').touched)\\\">\\r\\n                    {{ error.message }}\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"input-group input-group-alternative\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-lock-circle-open\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control\\\" type=\\\"password\\\" placeholder=\\\"Enter Password\\\" name=\\\"psw\\\" id=\\\"psw\\\" required\\r\\n                  formControlName=\\\"password\\\">\\r\\n              </div>\\r\\n              <div>\\r\\n                <ng-container *ngFor=\\\"let error of error_messages.password\\\">\\r\\n                  <div class=\\\"error-message\\\" *ngIf=\\\"signUpForm.get('password').hasError(error.type) &&\\r\\n            (signUpForm.get('password').dirty || signUpForm.get('password').touched)\\\">\\r\\n                    {{ error.message }}\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n              </div>\\r\\n            </div>\\r\\n            <!-- <input type=\\\"hidden\\\" placeholder=\\\"enter the project_id \\\" name=\\\"psw\\\" id=\\\"psw\\\" required formControlName=\\\"project_id\\\"> -->\\r\\n            <div class=\\\"text-muted font-italic\\\"><small>password strength: <span\\r\\n                  class=\\\"text-success font-weight-700\\\">strong</span></small></div>\\r\\n            <div class=\\\"row my-4\\\">\\r\\n              <div class=\\\"col-12\\\">\\r\\n                <div class=\\\"custom-control custom-control-alternative custom-checkbox\\\">\\r\\n                  <input class=\\\"custom-control-input\\\" id=\\\"customCheckRegister\\\" type=\\\"checkbox\\\">\\r\\n                  <label class=\\\"custom-control-label\\\" for=\\\"customCheckRegister\\\">\\r\\n                    <span class=\\\"text-muted\\\">I agree with the <a href=\\\"#!\\\">Privacy Policy</a></span>\\r\\n                  </label>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"text-center\\\">\\r\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4\\\" [disabled]=signUpForm.invalid>Create account</button>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"header bg-gradient-danger py-7 py-lg-8\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"header-body text-center mb-7\\\">\\r\\n      <div class=\\\"row justify-content-center\\\">\\r\\n        <div class=\\\"col-lg-5 col-md-6\\\">\\r\\n          <h1 class=\\\"text-blue\\\">Welcome!</h1>\\r\\n          <p class=\\\"text-lead text-blue\\\">reset account .</p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"separator separator-bottom separator-skew zindex-100\\\">\\r\\n    <svg x=\\\"0\\\" y=\\\"0\\\" viewBox=\\\"0 0 2560 100\\\" preserveAspectRatio=\\\"none\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\r\\n      <polygon class=\\\"fill-default\\\" points=\\\"2560 0 2560 100 0 100\\\"></polygon>\\r\\n    </svg>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Page content -->\\r\\n<div class=\\\"container mt--8 pb-5\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-5 col-md-7\\\">\\r\\n      <div class=\\\"card bg-secondary shadow border-0\\\">\\r\\n\\r\\n        <div class=\\\"card-body px-lg-5 py-lg-5\\\">\\r\\n          <div class=\\\"text-center text-muted mb-4\\\">\\r\\n            <small> reset password</small>\\r\\n          </div>\\r\\n          <form [formGroup]=\\\"loginForm\\\">\\r\\n            <div class=\\\"form-group mb-3\\\">\\r\\n              <div class=\\\"input-group input-group-alternative\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-email-83\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Enter Email\\\" name=\\\"email\\\" id=\\\"email\\\" required\\r\\n                  formControlName=\\\"email\\\">\\r\\n              </div>\\r\\n              <div>\\r\\n                <ng-container *ngFor=\\\"let error of error_messages.email\\\">\\r\\n                  <div class=\\\"error-message\\\" *ngIf=\\\"loginForm.get('email').hasError(error.type) &&\\r\\n                      (loginForm.get('email').dirty || loginForm.get('email').touched)\\\">\\r\\n                    {{ error.message }}\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"text-center\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary my-4\\\" (click)=\\\"doLogin()\\\">RESET</button>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row mt-3\\\">\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <a [routerLink]=\\\"['/login']\\\" class=\\\"text-light\\\"><small>Login</small></a>\\r\\n        </div>\\r\\n        <div class=\\\"col-6 text-right\\\">\\r\\n          <a [routerLink]=\\\"['/register']\\\" class=\\\"text-light\\\"><small>Create new account</small></a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AuthLayoutRoutes } from './auth-layout.routing';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n//import { RouterModule } from '@angular/router';\r\nimport { LoginComponent } from '../../pages/login/login.component';\r\nimport { RegisterComponent } from '../../pages/register/register.component';\r\n\r\nimport { ResetpasswordComponent } from '../../pages/resetpassword/resetpassword.component';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(AuthLayoutRoutes),\r\n    FormsModule,\r\n    // NgbModule\r\n    ReactiveFormsModule,\r\n    HttpClientModule\r\n\r\n  ],\r\n  declarations: [\r\n    LoginComponent,\r\n    RegisterComponent,\r\n\r\n    ResetpasswordComponent\r\n  ]\r\n})\r\nexport class AuthLayoutModule { }\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { LoginComponent } from '../../pages/login/login.component';\r\nimport { RegisterComponent } from '../../pages/register/register.component';\r\n\r\nimport { ResetpasswordComponent } from '../../pages/resetpassword/resetpassword.component';\r\nexport const AuthLayoutRoutes: Routes = [\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'register', component: RegisterComponent },\r\n\r\n    { path: 'reset', component: ResetpasswordComponent },\r\n];\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"../../../environments/environment\";\r\nimport { from } from \"rxjs\";\r\n@Component({\r\n  selector: \"app-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.scss\"],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  error_messages: any = {};\r\n\r\n  params: any;\r\n  constructor(\r\n    public router: Router,\r\n    public formBuilder: FormBuilder,\r\n    private http: HttpClient\r\n  ) {\r\n    this.setupLoginFormData();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(environment);\r\n  }\r\n  setupLoginFormData() {\r\n    this.error_messages = {\r\n      email: [\r\n        { type: \"required\", message: \"Email is Required\" },\r\n        { type: \"pattern\", message: \"Please Enter valid Email\" },\r\n      ],\r\n\r\n      password: [{ type: \"required\", message: \"Password is Required\" }],\r\n    };\r\n    this.loginForm = this.formBuilder.group({\r\n      email: new FormControl(\r\n        \"\",\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.pattern(\r\n            \"^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$\"\r\n          ),\r\n        ])\r\n      ),\r\n      password: new FormControl(\"\", Validators.compose([Validators.required])),\r\n    });\r\n  }\r\n\r\n  doLogin() {\r\n    this.params = {\r\n      email: this.loginForm.value.email,\r\n      password: this.loginForm.value.password,\r\n      projectid: 2,\r\n    };\r\n    return new Promise((resolve, reject) => {\r\n      this.http\r\n        .post(\r\n          environment.baseurl + \"auth/loginUser/\" + this.params.projectid,\r\n          this.params\r\n        )\r\n        .subscribe(\r\n          (result) => {\r\n            console.log(result, \"result\");\r\n            localStorage.setItem(\"token\", JSON.stringify(result));\r\n            this.router.navigateByUrl(\"/dashboard\");\r\n          },\r\n          (err) => {\r\n            console.log(err);\r\n            alert(\"please enter correct email and password\");\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n  register() {\r\n    console.log(\"register\");\r\n    this.router.navigateByUrl(\"/register\");\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Router } from \"@angular/router\";\r\n@Component({\r\n  selector: \"app-register\",\r\n  templateUrl: \"./register.component.html\",\r\n  styleUrls: [\"./register.component.scss\"],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  signUpForm: FormGroup;\r\n  error_messages: any = {};\r\n  params: any;\r\n  constructor(\r\n    public router: Router,\r\n    public formBuilder: FormBuilder,\r\n    private http: HttpClient\r\n  ) {\r\n    this.setupLoginFormData();\r\n  }\r\n\r\n  ngOnInit(): void { }\r\n  setupLoginFormData() {\r\n    this.error_messages = {\r\n      fname: [{ type: \"required\", message: \"First Name is Required\" }],\r\n      lname: [{ type: \"required\", message: \"lname is Required\" }],\r\n      phone: [\r\n        { type: \"required\", message: \"Phone Number  is required.\" },\r\n        { type: \"minlength\", message: \"minimun length should be 10 .\" },\r\n        { type: \"maxlength\", message: \"maximum length should be 12 .\" },\r\n      ],\r\n      mobile: [\r\n        { type: \"required\", message: \"mobile Number  is required.\" },\r\n        { type: \"minlength\", message: \"minimun length should be 10 .\" },\r\n        { type: \"maxlength\", message: \"maximum length should be 12 .\" },\r\n      ],\r\n      email: [\r\n        { type: \"required\", message: \"Email is Required\" },\r\n        { type: \"pattern\", message: \"Please Enter valid Email\" },\r\n      ],\r\n\r\n      password: [\r\n        { type: \"required\", message: \"Password is Required.\" },\r\n        { type: \"minlength\", message: \"minimun length should be 8 .\" },\r\n        { type: \"maxlength\", message: \"maximum length should be 12 .\" },\r\n      ],\r\n      projectid: [{ type: \"required\", message: \"Password is Required.\" }],\r\n    };\r\n    this.signUpForm = this.formBuilder.group({\r\n      fname: new FormControl(\"\", Validators.compose([Validators.required])),\r\n      lname: new FormControl(\"\", Validators.compose([Validators.required])),\r\n\r\n      mobile: new FormControl(\r\n        \"\",\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.minLength(10),\r\n          Validators.maxLength(12),\r\n        ])\r\n      ),\r\n      email: new FormControl(\r\n        \"\",\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.pattern(\r\n            \"^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$\"\r\n          ),\r\n        ])\r\n      ),\r\n\r\n      password: new FormControl(\r\n        \"\",\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.minLength(8),\r\n          Validators.maxLength(12),\r\n        ])\r\n      ),\r\n    });\r\n  }\r\n\r\n  doRegister() {\r\n    this.params = {\r\n      fname: this.signUpForm.controls.fname.value,\r\n      lname: this.signUpForm.controls.lname.value,\r\n      mobile: this.signUpForm.controls.mobile.value,\r\n\r\n      email: this.signUpForm.controls.email.value,\r\n      password: this.signUpForm.controls.password.value,\r\n    };\r\n    return new Promise((resolve, reject) => {\r\n      this.http\r\n        .post(\"https://api.80startups.com/2/user/createUser\", this.params)\r\n        .subscribe(\r\n          (result) => {\r\n            console.log(\"result\", result);\r\n            this.router.navigateByUrl(\"/login\");\r\n          },\r\n          (err) => {\r\n            console.log(err);\r\n            alert(\"please enter email and password\");\r\n            // reject(err);\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n  signin() {\r\n    this.router.navigateByUrl(\"/login\");\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Jlc2V0cGFzc3dvcmQvcmVzZXRwYXNzd29yZC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-resetpassword',\r\n  templateUrl: './resetpassword.component.html',\r\n  styleUrls: ['./resetpassword.component.css']\r\n})\r\nexport class ResetpasswordComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n  error_messages: any = {};\r\n  params: any;\r\n  constructor(public router: Router,public formBuilder: FormBuilder, private http: HttpClient) {\r\n    this.setupLoginFormData();\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  setupLoginFormData() {\r\n    this.error_messages = {\r\n      email: [\r\n        { type: \"required\", message: 'Email is Required' },\r\n        { type: \"pattern\", message: 'Please Enter valid Email' }\r\n      ],\r\n\r\n      \r\n    };\r\n    this.loginForm = this.formBuilder.group(\r\n      {\r\n        email: new FormControl(\r\n          \"\",\r\n          Validators.compose([\r\n            Validators.required,\r\n            Validators.pattern('^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$'),\r\n          ])\r\n        ),\r\n        \r\n      },\r\n    );\r\n  }\r\n\r\n  doLogin() {\r\n    this.params = {\r\n      \"email\": this.loginForm.value.email,\r\n      \r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      this.http.post(\"https://api.80startups.com/auth/loginUser/1\", this.params).subscribe(result => {\r\n        console.log(result,\"result\");\r\n        this.router.navigateByUrl('/AddAddress');\r\n      },\r\n        err => {\r\n          console.log(err);\r\n          alert(\"please enter correct email and password\");\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n \r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}