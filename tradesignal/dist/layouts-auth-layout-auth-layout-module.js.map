{"version":3,"sources":["./src/app/pages/add-address/add-address.component.html","./src/app/pages/login/login.component.html","./src/app/pages/register/register.component.html","./src/app/pages/resetpassword/resetpassword.component.html","./src/app/layouts/auth-layout/auth-layout.module.ts","./src/app/layouts/auth-layout/auth-layout.routing.ts","./src/app/pages/add-address/add-address.component.css","./src/app/pages/add-address/add-address.component.ts","./src/app/pages/login/login.component.scss","./src/app/pages/login/login.component.ts","./src/app/pages/register/register.component.scss","./src/app/pages/register/register.component.ts","./src/app/pages/resetpassword/resetpassword.component.css","./src/app/pages/resetpassword/resetpassword.component.ts"],"names":[],"mappings":"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","file":"layouts-auth-layout-auth-layout-module.js","sourcesContent":["export default \"<div class=\\\"header bg-gradient-danger pb-8 pt-5 pt-md-8\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"header-body\\\">\\r\\n        <!-- Card stats -->\\r\\n        \\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- Page content -->\\r\\n  <div class=\\\"container-fluid mt--7\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <div class=\\\"card shadow border-0\\\">\\r\\n          \\r\\n  <div class=\\\"container clearfix py-5\\\">\\r\\n    <div class=\\\"m-portlet__head\\\">\\r\\n        <div class=\\\"m-portlet__head-caption\\\">\\r\\n           <div class=\\\"m-portlet__head-title\\\">\\r\\n              <h3 class=\\\"m-portlet__head-text\\\">\\r\\n                One Step Away From Getting Your Loved Stuff!\\r\\n              </h3>\\r\\n           </div>\\r\\n        </div>\\r\\n    </div>\\r\\n     \\r\\n    <div class=\\\"container clearfix divcenter\\\" style=\\\"max-width: 900px;\\\">\\r\\n       <div class=\\\" nobottommargin\\\">\\r\\n        <form class=\\\"m-form m-form--fit m-form--label-align-right m-form--group-seperator-dashed\\\" autocomplete=\\\"off\\\"  [formGroup]=\\\"addresForm\\\">\\r\\n            <div class=\\\"m-portlet__body\\\">\\r\\n                <div class=\\\"form-group m-form__group row\\\">\\r\\n                    <div class=\\\"m-radio-inline\\\" style=\\\"margin-top: 15px;\\\">\\r\\n                       <span class=\\\"m-badge m-badge--primary m-badge--wide m-badge--rounded\\\" style=\\\"margin-left: 10px; font-size: 1.2rem;font-family: 'Montserrat'; width: 200px;padding: 12px; background-color:burlywood; \\\">\\r\\n                             BILLING ADDRESS\\r\\n                       </span><br>\\r\\n                        <div style=\\\"margin-top:25px; margin-left:15px;color:#db1a20;\\\"><p>All fields are mandatory</p></div>\\r\\n                    </div>\\r\\n                 </div>\\r\\n               <div class=\\\"form-group m-form__group row\\\">\\r\\n                   \\r\\n                  <div class=\\\"col-lg-6 col-md-4\\\">\\r\\n                       \\r\\n                     <label>\\r\\n                     First Name: \\r\\n                     </label>\\r\\n                     <input type=\\\"text\\\" class=\\\"form-control m-input\\\" placeholder=\\\"Enter first name\\\" name=\\\"fname\\\" id=\\\"fname\\\"  formControlName=\\\"fname\\\" required >\\r\\n                 </div>\\r\\n                 <ng-container *ngFor=\\\"let error of error_messages.fname\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"addresForm.get('fname').hasError(error.type) &&\\r\\n                    (addresForm.get('fname').dirty || addresForm.get('fname').touched)\\\">\\r\\n                        {{ error.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n                  <div class=\\\"col-lg-6 col-md-4 topgap\\\">\\r\\n                     <label class=\\\"\\\">\\r\\n                     Last Name: \\r\\n                     </label>\\r\\n                     <input type=\\\"text\\\" class=\\\"form-control m-input\\\" placeholder=\\\"Enter last name\\\" name=\\\"lname\\\" id=\\\"lname\\\" formControlName=\\\"lname\\\" required >\\r\\n                    </div>\\r\\n                    <ng-container *ngFor=\\\"let error of error_messages.lname\\\">\\r\\n                       <div class=\\\"error-message\\\" *ngIf=\\\"addresForm.get('lname').hasError(error.type) &&\\r\\n                       (addresForm.get('lname').dirty || addresForm.get('lname').touched)\\\">\\r\\n                           {{ error.message }}\\r\\n                       </div>\\r\\n                   </ng-container>\\r\\n               </div>\\r\\n              <div class=\\\"form-group m-form__group row topgap\\\">\\r\\n                  <div class=\\\"col-lg-12 col-md-10\\\">\\r\\n                     <label>\\r\\n                       address \\r\\n                     </label>\\r\\n                    <textarea type=\\\"text\\\" rows=\\\"4\\\" class=\\\"form-control\\\" placeholder=\\\"Please enter House/Flat Number, Building Name/ Apartment Name\\\" name=\\\"address\\\" id=\\\"address\\\" formControlName=\\\"address\\\" required ></textarea>\\r\\n                                                        \\r\\n                  </div>\\r\\n                  <ng-container *ngFor=\\\"let error of error_messages.address\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"addresForm.get('address').hasError(error.type) &&\\r\\n                    (addresForm.get('address').dirty || addresForm.get('address').touched)\\\">\\r\\n                        {{ error.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n               </div>\\r\\n              <div class=\\\"form-group m-form__group row topgap\\\">\\r\\n                  <div class=\\\"col-lg-12 col-md-10\\\">\\r\\n                     <label>\\r\\n                    2nd address \\r\\n                     </label>\\r\\n                    <textarea type=\\\"text\\\" rows=\\\"4\\\" class=\\\"form-control\\\" placeholder=\\\"Please enter Street Name, Locality\\\" name=\\\"address2\\\" id=\\\"address2\\\" formControlName=\\\"address2\\\" required ></textarea>\\r\\n                                                        \\r\\n                  </div>\\r\\n                  <ng-container *ngFor=\\\"let error of error_messages.address2\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"addresForm.get('address2').hasError(error.type) &&\\r\\n                    (addresForm.get('address2').dirty || addresForm.get('address2').touched)\\\">\\r\\n                        {{ error.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n               </div>  \\r\\n               \\r\\n                  <div class=\\\"form-group m-form__group row topgap\\\">\\r\\n                  <div class=\\\"col-lg-6 col-md-4\\\">\\r\\n                     <label>\\r\\n                     City  \\r\\n                     </label>\\r\\n                     <input type=\\\"text\\\" class=\\\"form-control m-input\\\" placeholder=\\\"Enter City\\\" name=\\\"city\\\" id=\\\"city\\\" formControlName=\\\"city\\\"  required >\\r\\n                     <ng-container *ngFor=\\\"let error of error_messages.city\\\">\\r\\n                       <div class=\\\"error-message\\\" *ngIf=\\\"addresForm.get('city').hasError(error.type) &&\\r\\n                       (addresForm.get('city').dirty || addresForm.get('city').touched)\\\">\\r\\n                           {{ error.message }}\\r\\n                       </div>\\r\\n                   </ng-container>\\r\\n                     <div class=\\\"clearfix\\\"></div>\\r\\n                        \\r\\n\\r\\n\\r\\n                  </div>\\r\\n                  <div class=\\\"col-lg-6 col-md-4 topgap\\\">\\r\\n                     <label class=\\\"\\\">\\r\\n                     State \\r\\n                     </label>\\r\\n                     <input type=\\\"text\\\" class=\\\"form-control m-input\\\" placeholder=\\\"Enter state name\\\" name=\\\"state\\\" id=\\\"state\\\" formControlName=\\\"state\\\" required >\\r\\n                      \\r\\n                    </div>\\r\\n                    <ng-container *ngFor=\\\"let error of error_messages.state\\\">\\r\\n                       <div class=\\\"error-message\\\" *ngIf=\\\"addresForm.get('state').hasError(error.type) &&\\r\\n                       (addresForm.get('state').dirty || addresForm.get('state').touched)\\\">\\r\\n                           {{ error.message }}\\r\\n                       </div>\\r\\n                   </ng-container>\\r\\n               </div>\\r\\n               <div class=\\\"form-group m-form__group row topgap\\\">\\r\\n                  <div class=\\\"col-lg-6 col-md-4\\\">\\r\\n                     <label>\\r\\n                      Country  \\r\\n                     </label>\\r\\n                     <input type=\\\"text\\\" name=\\\"country\\\" id=\\\"country\\\" class=\\\"form-control\\\" required formControlName=\\\"country\\\"  >\\r\\n                  </div>\\r\\n                  <ng-container *ngFor=\\\"let error of error_messages.country\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"addresForm.get('country').hasError(error.type) &&\\r\\n                    (addresForm.get('country').dirty || addresForm.get('country').touched)\\\">\\r\\n                        {{ error.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n                  <div class=\\\"col-lg-6 col-md-4 topgap\\\">\\r\\n                     <label class=\\\"\\\">\\r\\n                     postcode \\r\\n                     </label>\\r\\n                     <input type=\\\"text\\\" class=\\\"form-control m-input\\\" placeholder=\\\"Enter postcode\\\" name=\\\"postal_code\\\" id=\\\"postal_code\\\" formControlName=\\\"postal_code\\\" required >\\r\\n                      <div class=\\\"clearfix\\\"></div>    \\r\\n                  </div>\\r\\n                  <ng-container *ngFor=\\\"let error of error_messages.postal_code\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"addresForm.get('postal_code').hasError(error.type) &&\\r\\n                    (addresForm.get('postal_code').dirty || addresForm.get('postal_code').touched)\\\">\\r\\n                        {{ error.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n              </div>\\r\\n               <div class=\\\"form-group m-form__group row topgap\\\">\\r\\n                  \\r\\n                  <div class=\\\"col-lg-6 col-md-4 topgap\\\">\\r\\n                     <label class=\\\"\\\">\\r\\n                     Mobile Number \\r\\n                     </label>\\r\\n                     <input type=\\\"text\\\" class=\\\"form-control m-input\\\" placeholder=\\\"Enter your mobile number\\\" name=\\\"mobile\\\" id=\\\"mobile\\\" formControlName=\\\"mobile\\\"  required >\\r\\n                  </div>\\r\\n               </div>\\r\\n               <ng-container *ngFor=\\\"let error of error_messages.mobile\\\">\\r\\n                 <div class=\\\"error-message\\\" *ngIf=\\\"addresForm.get('mobile').hasError(error.type) &&\\r\\n                 (addresForm.get('mobile').dirty || addresForm.get('mobile').touched)\\\">\\r\\n                     {{ error.message }}\\r\\n                 </div>\\r\\n             </ng-container>\\r\\n                \\r\\n               <div class=\\\"form-group m-form__group row\\\">\\r\\n                  <div class=\\\"m-radio-inline\\\" style=\\\"margin-top: 20px;\\\">\\r\\n                     \\r\\n                     <label>\\r\\n                     Is Shipping Address Same As Billing Address? \\r\\n                     <span></span>\\r\\n                     </label>\\r\\n                      <label class=\\\"m-radio\\\">\\r\\n                         <input type=\\\"radio\\\" name=\\\"same\\\" class=\\\"same\\\" id=\\\"same\\\" value=\\\"yes\\\"  (click)=\\\"checkvalue($event)\\\">\\r\\n                     Yes\\r\\n                     <span></span>\\r\\n                     </label>\\r\\n                     <label class=\\\"m-radio\\\">\\r\\n                         <input type=\\\"radio\\\" name=\\\"same\\\" class=\\\"same\\\" id=\\\"same\\\" value=\\\"no\\\"  (click)=\\\"checkvalue($event)\\\">\\r\\n                         \\r\\n                     No\\r\\n                     <span></span>\\r\\n                     </label>\\r\\n                  </div>\\r\\n               </div>\\r\\n                \\r\\n               <div class=\\\"form-group m-form__group row\\\">\\r\\n                <div class=\\\"m-radio-inline\\\" style=\\\"margin-top: 15px;\\\">\\r\\n                   <span class=\\\"m-badge m-badge--primary m-badge--wide m-badge--rounded\\\" style=\\\"margin-left: 10px; font-size: 1.2rem;font-family: 'Montserrat'; width: 200px;padding: 12px; background-color:burlywood; \\\">\\r\\n                         SHIPPING ADDRESS\\r\\n                   </span>\\r\\n                </div>\\r\\n             </div>\\r\\n               <div class=\\\"form-group m-form__group row\\\">\\r\\n                  <div class=\\\"col-lg-6 col-md-4\\\">\\r\\n                     <label>\\r\\n                     First Name\\r\\n                     </label>\\r\\n                     <input type=\\\"text\\\" class=\\\"form-control m-input\\\" placeholder=\\\"Enter first name\\\" name=\\\"shipping_fname\\\" id=\\\"shipping_fname\\\" value=\\\"{{fname==null?null:fname}}\\\"  required formControlName=\\\"shipping_fname\\\"  required>\\r\\n                  </div>\\r\\n                  <ng-container *ngFor=\\\"let error of error_messages.shipping_fname\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"addresForm.get('shipping_fname').hasError(error.type) &&\\r\\n                    (addresForm.get('shipping_fname').dirty || addresForm.get('shipping_fname').touched)\\\">\\r\\n                        {{ error.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n                  <div class=\\\"col-lg-6 col-md-4 topgap\\\">\\r\\n                     <label class=\\\"\\\">\\r\\n                     Last Name\\r\\n                     </label>\\r\\n                     <input type=\\\"text\\\" class=\\\"form-control m-input\\\" placeholder=\\\"Enter last name\\\" name=\\\"shipping_lname\\\" id=\\\"shipping_lname\\\" value=\\\"{{lname==null?null:lname}}\\\" formControlName=\\\"shipping_lname\\\" required >     \\r\\n                  </div>\\r\\n                  <ng-container *ngFor=\\\"let error of error_messages.shipping_lname\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"addresForm.get('shipping_lname').hasError(error.type) &&\\r\\n                    (addresForm.get('shipping_lname').dirty || addresForm.get('shipping_lname').touched)\\\">\\r\\n                        {{ error.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n               </div>\\r\\n                  <div class=\\\"form-group m-form__group row topgap\\\">\\r\\n                  <div class=\\\"col-lg-12 col-md-10\\\">\\r\\n                     <label>\\r\\n                       Shipping Address1\\r\\n                     </label>\\r\\n                    <textarea type=\\\"text\\\" rows=\\\"4\\\" class=\\\"form-control\\\" placeholder=\\\"Please enter House/Flat Number, Building Name/ Apartment Name\\\" name=\\\"shipping_address\\\" id=\\\"shipping_address\\\" value=\\\"{{address==null?null:address}}\\\" formControlName=\\\"shipping_address\\\" required ></textarea>\\r\\n                  </div>\\r\\n                 </div>\\r\\n                 <ng-container *ngFor=\\\"let error of error_messages.shipping_address\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"addresForm.get('shipping_address').hasError(error.type) &&\\r\\n                    (addresForm.get('shipping_address').dirty || addresForm.get('shipping_address').touched)\\\">\\r\\n                        {{ error.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n                <div class=\\\"form-group m-form__group row topgap\\\">\\r\\n                  <div class=\\\"col-lg-12 col-md-10\\\">\\r\\n                     <label>\\r\\n                       Shipping Address2\\r\\n                     </label>\\r\\n                    <textarea type=\\\"text\\\" rows=\\\"4\\\" class=\\\"form-control\\\" placeholder=\\\"Please enter Street Name, Locality\\\" name=\\\"shipping_address2\\\" id=\\\"shipping_address2\\\" value=\\\"{{address2==null?null:address2}}\\\" formControlName=\\\"shipping_address2\\\" required ></textarea>                                     \\r\\n                  </div>\\r\\n               </div>\\r\\n               <ng-container *ngFor=\\\"let error of error_messages.shipping_address2\\\">\\r\\n                 <div class=\\\"error-message\\\" *ngIf=\\\"addresForm.get('shipping_address2').hasError(error.type) &&\\r\\n                 (addresForm.get('shipping_address2').dirty || addresForm.get('shipping_address2').touched)\\\">\\r\\n                     {{ error.message }}\\r\\n                 </div>\\r\\n             </ng-container>\\r\\n               \\r\\n                  <div class=\\\"form-group m-form__group row topgap\\\">\\r\\n                  <div class=\\\"col-lg-6 col-md-4\\\">\\r\\n                     <label>\\r\\n                     City   \\r\\n                     </label>\\r\\n                     <input type=\\\"text\\\" class=\\\"form-control m-input\\\" placeholder=\\\"Enter City\\\" name=\\\"shipping_city\\\" id=\\\"shipping_city\\\" value=\\\"{{city==null?null:city}}\\\" formControlName=\\\"shipping_city\\\" required >\\r\\n                      <div class=\\\"clearfix\\\"></div>\\r\\n                 </div>\\r\\n                 <ng-container *ngFor=\\\"let error of error_messages.shipping_city\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"addresForm.get('shipping_city').hasError(error.type) &&\\r\\n                    (addresForm.get('shipping_city').dirty || addresForm.get('shipping_city').touched)\\\">\\r\\n                        {{ error.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n                  <div class=\\\"col-lg-6 col-md-4 topgap\\\">\\r\\n                     <label class=\\\"\\\">\\r\\n                     State \\r\\n                     </label>\\r\\n                     <input type=\\\"text\\\" class=\\\"form-control m-input\\\" placeholder=\\\"Enter state name\\\" name=\\\"shipping_state\\\" id=\\\"shipping_state\\\" value=\\\"{{state==null?null:state}}\\\" formControlName=\\\"shipping_state\\\" required >\\r\\n                 </div>\\r\\n                 <ng-container *ngFor=\\\"let error of error_messages.shipping_state\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"addresForm.get('shipping_state').hasError(error.type) &&\\r\\n                    (addresForm.get('shipping_state').dirty || addresForm.get('shipping_state').touched)\\\">\\r\\n                        {{ error.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n               </div>\\r\\n               <div class=\\\"form-group m-form__group row topgap\\\">\\r\\n                  <div class=\\\"col-lg-6 col-md-4\\\">\\r\\n                    <label>\\r\\n                       Country   \\r\\n                       </label>\\r\\n                   <input type=\\\"text\\\" name=\\\"shipping_country\\\" id=\\\"shipping_country\\\" class=\\\"form-control\\\" value=\\\"{{country==null?null:country}}\\\"  formControlName=\\\"shipping_country\\\" required>\\r\\n                 </div>\\r\\n                 <ng-container *ngFor=\\\"let error of error_messages.shipping_country\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"addresForm.get('shipping_country').hasError(error.type) &&\\r\\n                    (addresForm.get('shipping_country').dirty || addresForm.get('shipping_country').touched)\\\">\\r\\n                        {{ error.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n                  <div class=\\\"col-lg-6 col-md-4 topgap\\\">\\r\\n                     <label class=\\\"\\\">\\r\\n                     postcode \\r\\n                     </label>\\r\\n                     <input type=\\\"text\\\" class=\\\"form-control m-input\\\" placeholder=\\\"Enter postcode \\\" name=\\\"shipping_postal_code\\\" id=\\\"shipping_postal_code\\\" value=\\\"{{postal_code==null?null:postal_code}}\\\" formControlName=\\\"shipping_postal_code\\\" required >\\r\\n                      <div class=\\\"clearfix\\\"></div>\\r\\n                  </div>\\r\\n                  <ng-container *ngFor=\\\"let error of error_messages.shipping_postal_code\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"addresForm.get('shipping_postal_code').hasError(error.type) &&\\r\\n                    (addresForm.get('shipping_postal_code').dirty || addresForm.get('shipping_postal_code').touched)\\\">\\r\\n                        {{ error.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n               </div>\\r\\n               \\r\\n          <div class=\\\"form-group m-form__group row topgap\\\"> \\r\\n                  <div class=\\\"col-lg-6 col-md-4 topgap\\\">\\r\\n                     <label class=\\\"\\\">\\r\\n                     Mobile Number \\r\\n                     </label>\\r\\n                     <input type=\\\"text\\\" class=\\\"form-control m-input\\\" placeholder=\\\"Enter your mobile number\\\" name=\\\"shipping_mobile\\\" id=\\\"shipping_mobile\\\" value=\\\"{{mobile==null?null:mobile}}\\\" formControlName=\\\"shipping_mobile\\\" required >\\r\\n                 </div>\\r\\n           </div>\\r\\n           <ng-container *ngFor=\\\"let error of error_messages.shipping_mobile\\\">\\r\\n              <div class=\\\"error-message\\\" *ngIf=\\\"addresForm.get('shipping_mobile').hasError(error.type) &&\\r\\n              (addresForm.get('shipping_mobile').dirty || addresForm.get('shipping_mobile').touched)\\\">\\r\\n                  {{ error.message }}\\r\\n              </div>\\r\\n          </ng-container>\\r\\n               \\r\\n               <div class=\\\"m-form__actions m-form__actions\\\" style=\\\"text-align: center;\\\">\\r\\n                   <button  type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addres()\\\" >\\r\\n                  Save\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n         </form>\\r\\n       </div>\\r\\n       <!-- .postcontent end -->\\r\\n    </div>\\r\\n  </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \"","export default \"<div class=\\\"header py-7 py-lg-8\\\">\\r\\n    <!-- <div class=\\\"header bg-gradient-danger py-7 py-lg-8\\\"> old style and css gradient-->\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"header-body text-center mb-7\\\">\\r\\n      <div class=\\\"row justify-content-center\\\">\\r\\n        <div class=\\\"col-lg-5 col-md-6\\\">\\r\\n          <h1 class=\\\"text-white\\\">TRADESIGNAL.IO</h1>\\r\\n          <!-- <p class=\\\"text-lead text-blue\\\"> login or create new account .</p> -->\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"separator separator-bottom separator-skew zindex-100\\\">\\r\\n    <svg x=\\\"0\\\" y=\\\"0\\\" viewBox=\\\"0 0 2560 100\\\" preserveAspectRatio=\\\"none\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\r\\n      <polygon class=\\\"fill-default\\\" points=\\\"2560 0 2560 100 0 100\\\"></polygon>\\r\\n    </svg>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Page content -->\\r\\n<div class=\\\"container mt--8 pb-5\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-5 col-md-7\\\">\\r\\n      \\r\\n      <div class=\\\"card bg-secondary shadow border-0\\\">\\r\\n\\r\\n        <div class=\\\"card-body px-lg-5 py-lg-5\\\">\\r\\n          <div class=\\\"text-center text-muted mb-4\\\">\\r\\n            <small> sign in </small>\\r\\n          </div>\\r\\n          <form [formGroup]=\\\"loginForm\\\">\\r\\n            <div class=\\\"form-group mb-3\\\">\\r\\n              <div class=\\\"input-group input-group-alternative\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-email-83\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Enter Email\\\" name=\\\"email\\\" id=\\\"email\\\" required\\r\\n                  formControlName=\\\"email\\\">\\r\\n              </div>\\r\\n              <div>\\r\\n                <ng-container *ngFor=\\\"let error of error_messages.email\\\">\\r\\n                  <div class=\\\"error-message\\\" *ngIf=\\\"loginForm.get('email').hasError(error.type) &&\\r\\n                    (loginForm.get('email').dirty || loginForm.get('email').touched)\\\">\\r\\n                    {{ error.message }}\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"input-group input-group-alternative\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-lock-circle-open\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control\\\" type=\\\"password\\\" placeholder=\\\"Enter Password\\\" name=\\\"psw\\\" id=\\\"psw\\\" required\\r\\n                  formControlName=\\\"password\\\">\\r\\n              </div>\\r\\n              <div>\\r\\n                <ng-container *ngFor=\\\"let error of error_messages.password\\\">\\r\\n                  <div class=\\\"error-message\\\"\\r\\n                    *ngIf=\\\"loginForm.get('password').hasError(error.type) && (loginForm.get('password').dirty || loginForm.get('password').touched)\\\">\\r\\n                    {{ error.message }}\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"custom-control custom-control-alternative custom-checkbox\\\">\\r\\n              <input class=\\\"custom-control-input\\\" id=\\\" customCheckLogin\\\" type=\\\"checkbox\\\">\\r\\n              <label class=\\\"custom-control-label\\\" for=\\\" customCheckLogin\\\">\\r\\n                <span class=\\\"text-muted\\\">Remember me</span>\\r\\n              </label>\\r\\n            </div>\\r\\n            <div class=\\\"text-center\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary my-4\\\" (click)=\\\"doLogin()\\\">Sign In</button>\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary my-4\\\" (click)=\\\"doLogin()\\\">Sign Up</button>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n\\r\\n        <!-- <div class=\\\"row mt-3\\\">\\r\\n            <div class=\\\"col-6\\\">\\r\\n              <a [routerLink]=\\\"['/reset']\\\" class=\\\"text-light\\\"><small>Forgot password?</small></a>\\r\\n            </div>\\r\\n            <div class=\\\"col-6 text-right\\\">\\r\\n              <a [routerLink]=\\\"['/register']\\\" class=\\\"text-light\\\"><small>Create new account</small></a>\\r\\n            </div>\\r\\n          </div> -->\\r\\n          \\r\\n      </div>\\r\\n      <div class=\\\"row mt-3\\\">\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <a [routerLink]=\\\"['/reset']\\\" class=\\\"text-light\\\"><small>Forgot password?</small></a>\\r\\n        </div>\\r\\n        <div class=\\\"col-6 text-right\\\">\\r\\n          <a [routerLink]=\\\"['/register']\\\" class=\\\"text-light\\\"><small>Create new account</small></a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"header bg-gradient-danger py-7 py-lg-8\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"header-body text-center mb-7\\\">\\r\\n      <div class=\\\"row justify-content-center\\\">\\r\\n        <div class=\\\"col-lg-5 col-md-6\\\">\\r\\n          <h1 class=\\\"text-blue\\\">Welcome!</h1>\\r\\n          <p class=\\\"text-lead text-blue\\\"> login or create new account .</p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"separator separator-bottom separator-skew zindex-100\\\">\\r\\n    <svg x=\\\"0\\\" y=\\\"0\\\" viewBox=\\\"0 0 2560 100\\\" preserveAspectRatio=\\\"none\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\r\\n      <polygon class=\\\"fill-default\\\" points=\\\"2560 0 2560 100 0 100\\\"></polygon>\\r\\n    </svg>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Page content -->\\r\\n<div class=\\\"container mt--8 pb-5\\\">\\r\\n  <!-- Table -->\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-6 col-md-8\\\">\\r\\n      <div class=\\\"card bg-secondary shadow border-0\\\">\\r\\n\\r\\n        <div class=\\\"card-body px-lg-5 py-lg-5\\\">\\r\\n          <div class=\\\"text-center text-muted mb-4\\\">\\r\\n            <small> sign up </small>\\r\\n          </div>\\r\\n          <form [formGroup]=\\\"signUpForm\\\" (ngSubmit)=\\\"doRegister()\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"input-group input-group-alternative mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-hat-3\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Enter First Name\\\" name=\\\"fname\\\" id=\\\"fname\\\" required\\r\\n                  formControlName=\\\"fname\\\">\\r\\n              </div>\\r\\n              <div>\\r\\n                <ng-container *ngFor=\\\"let error of error_messages.fname\\\">\\r\\n                  <div class=\\\"error-message\\\" *ngIf=\\\"signUpForm.get('fname').hasError(error.type) &&\\r\\n            (signUpForm.get('fname').dirty || signUpForm.get('fname').touched)\\\">\\r\\n                    {{ error.message }}\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"input-group input-group-alternative mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-hat-3\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Enter Last Name\\\" name=\\\"lname\\\" id=\\\"lname\\\" required\\r\\n                  formControlName=\\\"lname\\\">\\r\\n              </div>\\r\\n              <div>\\r\\n                <ng-container *ngFor=\\\"let error of error_messages.lname\\\">\\r\\n                  <div class=\\\"error-message\\\" *ngIf=\\\"signUpForm.get('lname').hasError(error.type) &&\\r\\n            (signUpForm.get('lname').dirty || signUpForm.get('lname').touched)\\\">\\r\\n                    {{ error.message }}\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"input-group input-group-alternative mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-hat-3\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Enter mobile\\\" name=\\\"mobile\\\" id=\\\"mobile\\\" required\\r\\n                  formControlName=\\\"mobile\\\">\\r\\n              </div>\\r\\n              <div>\\r\\n                <ng-container *ngFor=\\\"let error of error_messages.mobile\\\">\\r\\n                  <div class=\\\"error-message\\\" *ngIf=\\\"signUpForm.get('mobile').hasError(error.type) &&\\r\\n            (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched)\\\">\\r\\n                    {{ error.message }}\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"input-group input-group-alternative mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-email-83\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Enter Email\\\" name=\\\"email\\\" id=\\\"email\\\" required\\r\\n                  formControlName=\\\"email\\\">\\r\\n              </div>\\r\\n              <div>\\r\\n                <ng-container *ngFor=\\\"let error of error_messages.email\\\">\\r\\n                  <div class=\\\"error-message\\\" *ngIf=\\\"signUpForm.get('email').hasError(error.type) &&\\r\\n            (signUpForm.get('email').dirty || signUpForm.get('email').touched)\\\">\\r\\n                    {{ error.message }}\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"input-group input-group-alternative\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-lock-circle-open\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control\\\" type=\\\"password\\\" placeholder=\\\"Enter Password\\\" name=\\\"psw\\\" id=\\\"psw\\\" required\\r\\n                  formControlName=\\\"password\\\">\\r\\n              </div>\\r\\n              <div>\\r\\n                <ng-container *ngFor=\\\"let error of error_messages.password\\\">\\r\\n                  <div class=\\\"error-message\\\" *ngIf=\\\"signUpForm.get('password').hasError(error.type) &&\\r\\n            (signUpForm.get('password').dirty || signUpForm.get('password').touched)\\\">\\r\\n                    {{ error.message }}\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n              </div>\\r\\n            </div>\\r\\n            <!-- <input type=\\\"hidden\\\" placeholder=\\\"enter the project_id \\\" name=\\\"psw\\\" id=\\\"psw\\\" required formControlName=\\\"project_id\\\"> -->\\r\\n            <div class=\\\"text-muted font-italic\\\"><small>password strength: <span\\r\\n                  class=\\\"text-success font-weight-700\\\">strong</span></small></div>\\r\\n            <div class=\\\"row my-4\\\">\\r\\n              <div class=\\\"col-12\\\">\\r\\n                <div class=\\\"custom-control custom-control-alternative custom-checkbox\\\">\\r\\n                  <input class=\\\"custom-control-input\\\" id=\\\"customCheckRegister\\\" type=\\\"checkbox\\\">\\r\\n                  <label class=\\\"custom-control-label\\\" for=\\\"customCheckRegister\\\">\\r\\n                    <span class=\\\"text-muted\\\">I agree with the <a href=\\\"#!\\\">Privacy Policy</a></span>\\r\\n                  </label>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"text-center\\\">\\r\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4\\\" [disabled]=signUpForm.invalid>Create account</button>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"header bg-gradient-danger py-7 py-lg-8\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"header-body text-center mb-7\\\">\\r\\n      <div class=\\\"row justify-content-center\\\">\\r\\n        <div class=\\\"col-lg-5 col-md-6\\\">\\r\\n          <h1 class=\\\"text-blue\\\">Welcome!</h1>\\r\\n          <p class=\\\"text-lead text-blue\\\">reset account .</p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"separator separator-bottom separator-skew zindex-100\\\">\\r\\n    <svg x=\\\"0\\\" y=\\\"0\\\" viewBox=\\\"0 0 2560 100\\\" preserveAspectRatio=\\\"none\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\r\\n      <polygon class=\\\"fill-default\\\" points=\\\"2560 0 2560 100 0 100\\\"></polygon>\\r\\n    </svg>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Page content -->\\r\\n<div class=\\\"container mt--8 pb-5\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-5 col-md-7\\\">\\r\\n      <div class=\\\"card bg-secondary shadow border-0\\\">\\r\\n\\r\\n        <div class=\\\"card-body px-lg-5 py-lg-5\\\">\\r\\n          <div class=\\\"text-center text-muted mb-4\\\">\\r\\n            <small> reset password</small>\\r\\n          </div>\\r\\n          <form [formGroup]=\\\"loginForm\\\">\\r\\n            <div class=\\\"form-group mb-3\\\">\\r\\n              <div class=\\\"input-group input-group-alternative\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-email-83\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Enter Email\\\" name=\\\"email\\\" id=\\\"email\\\" required\\r\\n                  formControlName=\\\"email\\\">\\r\\n              </div>\\r\\n              <div>\\r\\n                <ng-container *ngFor=\\\"let error of error_messages.email\\\">\\r\\n                  <div class=\\\"error-message\\\" *ngIf=\\\"loginForm.get('email').hasError(error.type) &&\\r\\n                      (loginForm.get('email').dirty || loginForm.get('email').touched)\\\">\\r\\n                    {{ error.message }}\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"text-center\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary my-4\\\" (click)=\\\"doLogin()\\\">RESET</button>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row mt-3\\\">\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <a [routerLink]=\\\"['/login']\\\" class=\\\"text-light\\\"><small>Login</small></a>\\r\\n        </div>\\r\\n        <div class=\\\"col-6 text-right\\\">\\r\\n          <a [routerLink]=\\\"['/register']\\\" class=\\\"text-light\\\"><small>Create new account</small></a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AuthLayoutRoutes } from './auth-layout.routing';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n//import { RouterModule } from '@angular/router';\r\nimport { LoginComponent } from '../../pages/login/login.component';\r\nimport { RegisterComponent } from '../../pages/register/register.component';\r\nimport { AddAddressComponent } from '../../pages/add-address/add-address.component';\r\nimport { ResetpasswordComponent } from '../../pages/resetpassword/resetpassword.component';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(AuthLayoutRoutes),\r\n    FormsModule,\r\n    // NgbModule\r\n    ReactiveFormsModule,\r\n    HttpClientModule\r\n    \r\n  ],\r\n  declarations: [\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    AddAddressComponent,\r\n    ResetpasswordComponent\r\n  ]\r\n})\r\nexport class AuthLayoutModule { }\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { LoginComponent } from '../../pages/login/login.component';\r\nimport { RegisterComponent } from '../../pages/register/register.component';\r\nimport { AddAddressComponent } from '../../pages/add-address/add-address.component';\r\nimport { ResetpasswordComponent } from '../../pages/resetpassword/resetpassword.component';\r\nexport const AuthLayoutRoutes: Routes = [\r\n    { path: 'login',          component: LoginComponent },\r\n    { path: 'register',       component: RegisterComponent },\r\n    { path: 'addaddress',       component: AddAddressComponent },\r\n    { path: 'reset',       component: ResetpasswordComponent  },\r\n];\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FkZC1hZGRyZXNzL2FkZC1hZGRyZXNzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder,FormControl,FormGroup,Validators,} from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-add-address',\r\n  templateUrl: './add-address.component.html',\r\n  styleUrls: ['./add-address.component.css']\r\n})\r\nexport class AddAddressComponent implements OnInit {\r\n\r\n  addresForm: FormGroup;\r\n  error_messages: any = {};\r\n  params: any;\r\n  \r\n  constructor(\r\n    public formBuilder: FormBuilder,\r\n    private http: HttpClient,\r\n    public router: Router\r\n  ) {\r\n    this.setupAddressFormData();\r\n  }\r\n  fname = '';\r\n  lname = '';\r\n  address = '';\r\n  address2 = '';\r\n  city = '';\r\n  state = '';\r\n  country = '';\r\n  mobile = '';\r\n  postal_code = '';\r\n\r\n  checkvalue(event) {\r\n    if (event.target.value == 'yes') {\r\n      //this.addressForm.value.fname=this.addressForm.value.fname\r\n      //this.addressForm.value.fname=this.addressForm.value.fname\r\n      (this.fname = this.addresForm.controls.fname.value),\r\n        (this.lname = this.addresForm.controls.lname.value),\r\n        (this.address = this.addresForm.controls.address.value),\r\n        (this.address2 = this.addresForm.controls.address2.value),\r\n        (this.city = this.addresForm.controls.city.value),\r\n        (this.state = this.addresForm.controls.state.value),\r\n        (this.country = this.addresForm.controls.country.value),\r\n        (this.mobile = this.addresForm.controls.mobile.value),\r\n        (this.postal_code = this.addresForm.controls.postal_code.value);\r\n    } else {\r\n      (this.fname = null),\r\n        (this.lname = null),\r\n        (this.address = null),\r\n        (this.address2 = null),\r\n        (this.city = null),\r\n        (this.state = null),\r\n        (this.country = null),\r\n        (this.mobile = null),\r\n        (this.postal_code = null);\r\n    }\r\n  }\r\n\r\n  setupAddressFormData() {\r\n    this.error_messages = {\r\n      fname: [{ type: 'required', message: 'First Name is Required' }],\r\n      lname: [{ type: 'required', message: 'lname is Required' }],\r\n\r\n      address: [{ type: 'required', message: 'address  is required.' }],\r\n      address2: [{ type: 'required', message: 'address2  is required.' }],\r\n      city: [{ type: 'required', message: 'city  is required.' }],\r\n      state: [{ type: 'required', message: 'state  is required.' }],\r\n      country: [{ type: 'required', message: 'country  is required.' }],\r\n      postal_code: [{ type: 'required', message: 'postal code  is required.' }],\r\n      mobile: [\r\n        { type: 'required', message: 'mobile Number  is required.' },\r\n        { type: 'minlength', message: 'minimun length should be 10 .' },\r\n        { type: 'maxlength', message: 'maximum length should be 12 .' },\r\n      ],\r\n\r\n      shipping_fname: [{ type: 'required', message: 'First Name is Required' }],\r\n      shipping_lname: [{ type: 'required', message: 'lname is Required' }],\r\n\r\n      shipping_address: [{ type: 'required', message: 'address  is required.' }],\r\n      shipping_address2: [{ type: 'required', message: 'address2  is required.' }],\r\n      shipping_city: [{ type: 'required', message: 'city  is required.' }],\r\n      shipping_state: [{ type: 'required', message: 'state  is required.' }],\r\n      shipping_country: [{ type: 'required', message: 'country  is required.' }],\r\n      shipping_postal_code: [\r\n        { type: 'required', message: 'postal code  is required.' },\r\n      ],\r\n      shipping_mobile: [\r\n        { type: 'required', message: 'mobile Number  is required.' },\r\n        { type: 'minlength', message: 'minimun length should be 10 .' },\r\n        { type: 'maxlength', message: 'maximum length should be 12 .' },\r\n      ],\r\n    };\r\n    this.addresForm = this.formBuilder.group({\r\n      fname: new FormControl('', Validators.compose([Validators.required])),\r\n      lname: new FormControl('', Validators.compose([Validators.required])),\r\n\r\n      address: new FormControl('', Validators.compose([Validators.required])),\r\n      address2: new FormControl('', Validators.compose([Validators.required])),\r\n      city: new FormControl('', Validators.compose([Validators.required])),\r\n      state: new FormControl('', Validators.compose([Validators.required])),\r\n      country: new FormControl('', Validators.compose([Validators.required])),\r\n      postal_code: new FormControl(\r\n        '',\r\n        Validators.compose([Validators.required])\r\n      ),\r\n      mobile: new FormControl(\r\n        '',\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.minLength(10),\r\n          Validators.maxLength(12),\r\n        ])\r\n      ),\r\n      shipping_fname: new FormControl('', Validators.compose([Validators.required])),\r\n      shipping_lname: new FormControl('', Validators.compose([Validators.required])),\r\n\r\n      shipping_address: new FormControl('', Validators.compose([Validators.required])),\r\n      shipping_address2: new FormControl('', Validators.compose([Validators.required])),\r\n      shipping_city: new FormControl('', Validators.compose([Validators.required])),\r\n      shipping_state: new FormControl('', Validators.compose([Validators.required])),\r\n      shipping_country: new FormControl('', Validators.compose([Validators.required])),\r\n      shipping_postal_code: new FormControl(\r\n        '',\r\n        Validators.compose([Validators.required])\r\n      ),\r\n      shipping_mobile: new FormControl(\r\n        '',\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.minLength(10),\r\n          Validators.maxLength(12),\r\n        ])\r\n      ),\r\n    });\r\n  }\r\n  ngOnInit(): void {}\r\n  addres() {\r\n    this.params = {\r\n      fname: this.addresForm.controls.fname.value,\r\n      lname: this.addresForm.controls.lname.value,\r\n      address: this.addresForm.controls.address.value,\r\n      address2: this.addresForm.controls.address2.value,\r\n      mobile: this.addresForm.controls.mobile.value,\r\n\r\n      city: this.addresForm.controls.city.value,\r\n      state: this.addresForm.controls.state.value,\r\n      country: this.addresForm.controls.country.value,\r\n      postal_code: this.addresForm.controls.postal_code.value,\r\n    \r\n      shipping_fname:\r\n        this.addresForm.controls.shipping_fname.value == ''\r\n          ? this.fname\r\n          : this.addresForm.controls.shipping_fname.value,\r\n\r\n      shipping_lname:\r\n        this.addresForm.controls.shipping_lname.value == ''\r\n          ? this.lname\r\n          : this.addresForm.controls.shipping_lname.value,\r\n\r\n      shipping_address:\r\n        this.addresForm.controls.shipping_address.value == ''\r\n          ? this.address\r\n          : this.addresForm.controls.shipping_address.value,\r\n\r\n      shipping_address2:\r\n        this.addresForm.controls.shipping_address2.value == ''\r\n          ? this.address2\r\n          : this.addresForm.controls.shipping_address2.value,\r\n\r\n      shipping_mobile:\r\n        this.addresForm.controls.shipping_mobile.value == ''\r\n          ? this.mobile\r\n          : this.addresForm.controls.shipping_mobile.value,\r\n\r\n      shipping_city:\r\n        this.addresForm.controls.shipping_city.value == ''\r\n          ? this.city\r\n          : this.addresForm.controls.shipping_city.value,\r\n\r\n      shipping_state:\r\n        this.addresForm.controls.shipping_state.value == ''\r\n          ? this.state\r\n          : this.addresForm.controls.shipping_state.value,\r\n\r\n     shipping_country :\r\n        this.addresForm.controls.shipping_country.value == ''\r\n          ? this.country\r\n          : this.addresForm.controls.shipping_country.value,\r\n\r\n      shipping_postal_code:\r\n        this.addresForm.controls.shipping_postal_code.value == ''\r\n          ? this.postal_code\r\n          : this.addresForm.controls.shipping_postal_code.value,\r\n    };\r\n    //console.log(this.params);\r\n    return new Promise((resolve, reject) => {\r\n      this.http.post(\"https://api.80startups.com/shipping/createShipping\", this.params).subscribe(result => {\r\n        console.log(\"result\", result);\r\n        this.router.navigateByUrl('/dashboard')\r\n      },\r\n        err => {\r\n          console.log(err);\r\n          alert(\"please enter fill \");\r\n          // reject(err);\r\n        }\r\n      ); \r\n    }); \r\n\r\n    \r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Router } from '@angular/router';\r\nimport { environment } from '../../../environments/environment'\r\nimport { from } from 'rxjs';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  error_messages: any = {};\r\n\r\n  params: any;\r\n  constructor(public router: Router, public formBuilder: FormBuilder, private http: HttpClient) {\r\n    this.setupLoginFormData();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(environment)\r\n\r\n  }\r\n  setupLoginFormData() {\r\n    this.error_messages = {\r\n      email: [\r\n        { type: \"required\", message: 'Email is Required' },\r\n        { type: \"pattern\", message: 'Please Enter valid Email' }\r\n      ],\r\n\r\n      password: [\r\n        { type: \"required\", message: 'Password is Required' }\r\n      ],\r\n    };\r\n    this.loginForm = this.formBuilder.group(\r\n      {\r\n        email: new FormControl(\r\n          \"\",\r\n          Validators.compose([\r\n            Validators.required,\r\n            Validators.pattern('^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$'),\r\n          ])\r\n        ),\r\n        password: new FormControl(\r\n          \"\",\r\n          Validators.compose([\r\n            Validators.required,\r\n          ])\r\n        ),\r\n      },\r\n    );\r\n  }\r\n\r\n  doLogin() {\r\n    this.params = {\r\n      \"email\": this.loginForm.value.email,\r\n      \"password\": this.loginForm.value.password,\r\n      \"project_id\": 2\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      this.http.post(environment.baseurl + \"auth/loginUser/\" + this.params.project_id, this.params).subscribe(result => {\r\n        console.log(result, \"result\");\r\n        localStorage.setItem('token', JSON.stringify(result))\r\n        this.router.navigateByUrl('/dashboard');\r\n      },\r\n        err => {\r\n          console.log(err);\r\n          alert(\"please enter correct email and password\");\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  register() {\r\n    console.log(\"register\");\r\n    this.router.navigateByUrl('/register');\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  signUpForm: FormGroup;\r\n  error_messages: any = {};\r\n  params: any;\r\n  constructor(public router: Router,\r\n    public formBuilder: FormBuilder, private http: HttpClient) {\r\n    this.setupLoginFormData();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  setupLoginFormData() {\r\n    this.error_messages = {\r\n\r\n\r\n      fname: [\r\n        { type: \"required\", message: 'First Name is Required' }\r\n      ],\r\n      lname: [\r\n        { type: \"required\", message: 'lname is Required' }\r\n      ],\r\n      phone: [\r\n        { type: \"required\", message: \"Phone Number  is required.\" },\r\n        { type: \"minlength\", message: \"minimun length should be 10 .\" },\r\n        { type: \"maxlength\", message: \"maximum length should be 12 .\" }\r\n      ],\r\n      mobile: [\r\n        { type: \"required\", message: \"mobile Number  is required.\" },\r\n        { type: \"minlength\", message: \"minimun length should be 10 .\" },\r\n        { type: \"maxlength\", message: \"maximum length should be 12 .\" }\r\n      ],\r\n      email: [\r\n        { type: \"required\", message: 'Email is Required' },\r\n        { type: \"pattern\", message: 'Please Enter valid Email' }\r\n      ],\r\n\r\n      password: [\r\n        { type: \"required\", message: \"Password is Required.\" },\r\n        { type: \"minlength\", message: \"minimun length should be 8 .\" },\r\n        { type: \"maxlength\", message: \"maximum length should be 12 .\" }\r\n      ],\r\n      project_id: [\r\n        { type: \"required\", message: \"Password is Required.\" },\r\n      ]\r\n\r\n\r\n\r\n\r\n\r\n    };\r\n    this.signUpForm = this.formBuilder.group(\r\n      {\r\n        fname: new FormControl(\r\n          \"\",\r\n          Validators.compose([\r\n            Validators.required,\r\n          ])\r\n        ),\r\n        lname: new FormControl(\r\n          \"\",\r\n          Validators.compose([\r\n            Validators.required,\r\n          ])\r\n        ),\r\n\r\n        mobile: new FormControl(\r\n          \"\",\r\n          Validators.compose([\r\n            Validators.required,\r\n            Validators.minLength(10),\r\n            Validators.maxLength(12)\r\n          ])\r\n        ),\r\n        email: new FormControl(\r\n          \"\",\r\n          Validators.compose([\r\n            Validators.required,\r\n            Validators.pattern('^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$'),\r\n          ])\r\n        ),\r\n\r\n        password: new FormControl(\r\n          \"\",\r\n          Validators.compose([\r\n            Validators.required,\r\n            Validators.minLength(8),\r\n            Validators.maxLength(12)\r\n          ])\r\n        ),\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      },\r\n    );\r\n  }\r\n\r\n\r\n  doRegister() {\r\n\r\n\r\n    this.params = {\r\n      \"fname\": this.signUpForm.controls.fname.value,\r\n      \"lname\": this.signUpForm.controls.lname.value,\r\n      \"mobile\": this.signUpForm.controls.mobile.value,\r\n\r\n      \"email\": this.signUpForm.controls.email.value,\r\n      \"password\": this.signUpForm.controls.password.value,\r\n      \"project_id\": 2,\r\n\r\n\r\n\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      this.http.post(\"https://api.80startups.com/user/createUser\", this.params).subscribe(result => {\r\n        console.log(\"result\", result);\r\n        this.router.navigateByUrl('/login')\r\n      },\r\n        err => {\r\n          console.log(err);\r\n          alert(\"please enter email and password\");\r\n          // reject(err);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  signin() {\r\n    this.router.navigateByUrl('/login');\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Jlc2V0cGFzc3dvcmQvcmVzZXRwYXNzd29yZC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-resetpassword',\r\n  templateUrl: './resetpassword.component.html',\r\n  styleUrls: ['./resetpassword.component.css']\r\n})\r\nexport class ResetpasswordComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n  error_messages: any = {};\r\n  params: any;\r\n  constructor(public router: Router,public formBuilder: FormBuilder, private http: HttpClient) {\r\n    this.setupLoginFormData();\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  setupLoginFormData() {\r\n    this.error_messages = {\r\n      email: [\r\n        { type: \"required\", message: 'Email is Required' },\r\n        { type: \"pattern\", message: 'Please Enter valid Email' }\r\n      ],\r\n\r\n      \r\n    };\r\n    this.loginForm = this.formBuilder.group(\r\n      {\r\n        email: new FormControl(\r\n          \"\",\r\n          Validators.compose([\r\n            Validators.required,\r\n            Validators.pattern('^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$'),\r\n          ])\r\n        ),\r\n        \r\n      },\r\n    );\r\n  }\r\n\r\n  doLogin() {\r\n    this.params = {\r\n      \"email\": this.loginForm.value.email,\r\n      \r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      this.http.post(\"https://api.80startups.com/auth/loginUser/1\", this.params).subscribe(result => {\r\n        console.log(result,\"result\");\r\n        this.router.navigateByUrl('/AddAddress');\r\n      },\r\n        err => {\r\n          console.log(err);\r\n          alert(\"please enter correct email and password\");\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n \r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}