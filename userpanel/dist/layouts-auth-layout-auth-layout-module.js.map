{"version":3,"sources":["./src/app/pages/login/login.component.html","./src/app/pages/register/register.component.html","./src/app/pages/resetpassword/resetpassword.component.html","./src/app/layouts/auth-layout/auth-layout.module.ts","./src/app/layouts/auth-layout/auth-layout.routing.ts","./src/app/pages/login/login.component.scss","./src/app/pages/login/login.component.ts","./src/app/pages/register/register.component.scss","./src/app/pages/register/register.component.ts","./src/app/pages/resetpassword/resetpassword.component.css","./src/app/pages/resetpassword/resetpassword.component.ts"],"names":[],"mappings":"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","file":"layouts-auth-layout-auth-layout-module.js","sourcesContent":["export default \"<div class=\\\"header bg-gradient-danger py-7 py-lg-8\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"header-body text-center mb-7\\\">\\n      <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-lg-5 col-md-6\\\">\\n          <h1 class=\\\"text-white\\\">Welcome!</h1>\\n          <p class=\\\"text-lead text-light\\\"> login or create new account .</p>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"separator separator-bottom separator-skew zindex-100\\\">\\n    <svg x=\\\"0\\\" y=\\\"0\\\" viewBox=\\\"0 0 2560 100\\\" preserveAspectRatio=\\\"none\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n      <polygon class=\\\"fill-default\\\" points=\\\"2560 0 2560 100 0 100\\\"></polygon>\\n    </svg>\\n  </div>\\n</div>\\n<!-- Page content -->\\n<div class=\\\"container mt--8 pb-5\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-5 col-md-7\\\">\\n      <div class=\\\"card bg-secondary shadow border-0\\\">\\n\\n        <div class=\\\"card-body px-lg-5 py-lg-5\\\">\\n          <div class=\\\"text-center text-muted mb-4\\\">\\n            <small> sign in </small>\\n          </div>\\n          <form [formGroup]=\\\"loginForm\\\">\\n            <div class=\\\"form-group mb-3\\\">\\n              <div class=\\\"input-group input-group-alternative\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-email-83\\\"></i></span>\\n                </div>\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Enter Email\\\" name=\\\"email\\\" id=\\\"email\\\" required\\n                  formControlName=\\\"email\\\">\\n              </div>\\n              <div>\\n                <ng-container *ngFor=\\\"let error of error_messages.email\\\">\\n                  <div class=\\\"error-message\\\" *ngIf=\\\"loginForm.get('email').hasError(error.type) &&\\n                    (loginForm.get('email').dirty || loginForm.get('email').touched)\\\">\\n                    {{ error.message }}\\n                  </div>\\n                </ng-container>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group input-group-alternative\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-lock-circle-open\\\"></i></span>\\n                </div>\\n                <input class=\\\"form-control\\\" type=\\\"password\\\" placeholder=\\\"Enter Password\\\" name=\\\"psw\\\" id=\\\"psw\\\" required\\n                  formControlName=\\\"password\\\">\\n              </div>\\n              <div>\\n                <ng-container *ngFor=\\\"let error of error_messages.password\\\">\\n                  <div class=\\\"error-message\\\"\\n                    *ngIf=\\\"loginForm.get('password').hasError(error.type) && (loginForm.get('password').dirty || loginForm.get('password').touched)\\\">\\n                    {{ error.message }}\\n                  </div>\\n                </ng-container>\\n              </div>\\n            </div>\\n            <div class=\\\"custom-control custom-control-alternative custom-checkbox\\\">\\n              <input class=\\\"custom-control-input\\\" id=\\\" customCheckLogin\\\" type=\\\"checkbox\\\">\\n              <label class=\\\"custom-control-label\\\" for=\\\" customCheckLogin\\\">\\n                <span class=\\\"text-muted\\\">Remember me</span>\\n              </label>\\n            </div>\\n            <div class=\\\"text-center\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary my-4\\\" (click)=\\\"doLogin()\\\">Sign in</button>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n      <div class=\\\"row mt-3\\\">\\n        <div class=\\\"col-6\\\">\\n          <a [routerLink]=\\\"['/reset']\\\" class=\\\"text-light\\\"><small>Forgot password?</small></a>\\n        </div>\\n        <div class=\\\"col-6 text-right\\\">\\n          <a [routerLink]=\\\"['/register']\\\" class=\\\"text-light\\\"><small>Create new account</small></a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"header bg-gradient-danger py-7 py-lg-8\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"header-body text-center mb-7\\\">\\n      <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-lg-5 col-md-6\\\">\\n          <h1 class=\\\"text-white\\\">Welcome!</h1>\\n          <p class=\\\"text-lead text-light\\\"> login or create new account .</p>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"separator separator-bottom separator-skew zindex-100\\\">\\n    <svg x=\\\"0\\\" y=\\\"0\\\" viewBox=\\\"0 0 2560 100\\\" preserveAspectRatio=\\\"none\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n      <polygon class=\\\"fill-default\\\" points=\\\"2560 0 2560 100 0 100\\\"></polygon>\\n    </svg>\\n  </div>\\n</div>\\n<!-- Page content -->\\n<div class=\\\"container mt--8 pb-5\\\">\\n  <!-- Table -->\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-6 col-md-8\\\">\\n      <div class=\\\"card bg-secondary shadow border-0\\\">\\n        \\n        <div class=\\\"card-body px-lg-5 py-lg-5\\\">\\n          <div class=\\\"text-center text-muted mb-4\\\">\\n            <small> sign up </small>\\n          </div>\\n          <form [formGroup]=\\\"signUpForm\\\" (ngSubmit)=\\\"doRegister()\\\">\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group input-group-alternative mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-hat-3\\\"></i></span>\\n                </div>\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Enter First Name\\\" name=\\\"fname\\\" id=\\\"fname\\\" required\\n            formControlName=\\\"fname\\\">\\n              </div>\\n              <div>\\n                <ng-container *ngFor=\\\"let error of error_messages.fname\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"signUpForm.get('fname').hasError(error.type) &&\\n            (signUpForm.get('fname').dirty || signUpForm.get('fname').touched)\\\">\\n                        {{ error.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group input-group-alternative mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-hat-3\\\"></i></span>\\n                </div>\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Enter Last Name\\\" name=\\\"lname\\\" id=\\\"lname\\\" required\\n            formControlName=\\\"lname\\\">\\n              </div>\\n              <div>\\n                <ng-container *ngFor=\\\"let error of error_messages.lname\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"signUpForm.get('lname').hasError(error.type) &&\\n            (signUpForm.get('lname').dirty || signUpForm.get('lname').touched)\\\">\\n                        {{ error.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group input-group-alternative mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-hat-3\\\"></i></span>\\n                </div>\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Enter mobile\\\" name=\\\"mobile\\\" id=\\\"mobile\\\" required formControlName=\\\"mobile\\\">\\n              </div>\\n              <div>\\n                <ng-container *ngFor=\\\"let error of error_messages.mobile\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"signUpForm.get('mobile').hasError(error.type) &&\\n            (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched)\\\">\\n                        {{ error.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group input-group-alternative mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-email-83\\\"></i></span>\\n                </div>\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Enter Email\\\" name=\\\"email\\\" id=\\\"email\\\" required formControlName=\\\"email\\\">\\n              </div>\\n              <div>\\n                <ng-container *ngFor=\\\"let error of error_messages.email\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"signUpForm.get('email').hasError(error.type) &&\\n            (signUpForm.get('email').dirty || signUpForm.get('email').touched)\\\">\\n                        {{ error.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group input-group-alternative\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-lock-circle-open\\\"></i></span>\\n                </div>\\n                <input class=\\\"form-control\\\" type=\\\"password\\\" placeholder=\\\"Enter Password\\\" name=\\\"psw\\\" id=\\\"psw\\\" required formControlName=\\\"password\\\">\\n              </div>\\n              <div>\\n                <ng-container *ngFor=\\\"let error of error_messages.password\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"signUpForm.get('password').hasError(error.type) &&\\n            (signUpForm.get('password').dirty || signUpForm.get('password').touched)\\\">\\n                        {{ error.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            </div>\\n            <!-- <input type=\\\"hidden\\\" placeholder=\\\"enter the project_id \\\" name=\\\"psw\\\" id=\\\"psw\\\" required formControlName=\\\"project_id\\\"> -->\\n            <div class=\\\"text-muted font-italic\\\"><small>password strength: <span class=\\\"text-success font-weight-700\\\">strong</span></small></div>\\n            <div class=\\\"row my-4\\\">\\n              <div class=\\\"col-12\\\">\\n                <div class=\\\"custom-control custom-control-alternative custom-checkbox\\\">\\n                  <input class=\\\"custom-control-input\\\" id=\\\"customCheckRegister\\\" type=\\\"checkbox\\\">\\n                  <label class=\\\"custom-control-label\\\" for=\\\"customCheckRegister\\\">\\n                    <span class=\\\"text-muted\\\">I agree with the <a href=\\\"#!\\\">Privacy Policy</a></span>\\n                  </label>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"text-center\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4\\\" [disabled]=signUpForm.invalid>Create account</button>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"\\n<div class=\\\"header bg-gradient-danger py-7 py-lg-8\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"header-body text-center mb-7\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n          <div class=\\\"col-lg-5 col-md-6\\\">\\n            <h1 class=\\\"text-white\\\">Welcome!</h1>\\n            <p class=\\\"text-lead text-light\\\">reset account .</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"separator separator-bottom separator-skew zindex-100\\\">\\n      <svg x=\\\"0\\\" y=\\\"0\\\" viewBox=\\\"0 0 2560 100\\\" preserveAspectRatio=\\\"none\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n        <polygon class=\\\"fill-default\\\" points=\\\"2560 0 2560 100 0 100\\\"></polygon>\\n      </svg>\\n    </div>\\n  </div>\\n  <!-- Page content -->\\n  <div class=\\\"container mt--8 pb-5\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-lg-5 col-md-7\\\">\\n        <div class=\\\"card bg-secondary shadow border-0\\\">\\n          \\n          <div class=\\\"card-body px-lg-5 py-lg-5\\\">\\n            <div class=\\\"text-center text-muted mb-4\\\">\\n              <small> reset password</small>\\n            </div>\\n            <form [formGroup]=\\\"loginForm\\\">\\n              <div class=\\\"form-group mb-3\\\">\\n                <div class=\\\"input-group input-group-alternative\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-email-83\\\"></i></span>\\n                  </div>\\n                  <input class=\\\"form-control\\\"  type=\\\"text\\\" placeholder=\\\"Enter Email\\\" name=\\\"email\\\" id=\\\"email\\\" required formControlName=\\\"email\\\">\\n                </div>\\n                <div>\\n                  <ng-container *ngFor=\\\"let error of error_messages.email\\\">\\n                      <div class=\\\"error-message\\\" *ngIf=\\\"loginForm.get('email').hasError(error.type) &&\\n                      (loginForm.get('email').dirty || loginForm.get('email').touched)\\\">\\n                          {{ error.message }}\\n                      </div>\\n                  </ng-container>\\n              </div>\\n              </div>\\n              \\n              \\n              <div class=\\\"text-center\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary my-4\\\" (click)=\\\"doLogin()\\\">RESET</button>\\n              </div>\\n            </form>\\n          </div>\\n        </div>\\n        <div class=\\\"row mt-3\\\">\\n          <div class=\\\"col-6\\\">\\n            <a [routerLink]=\\\"['/login']\\\" class=\\\"text-light\\\"><small>Login</small></a>\\n          </div>\\n          <div class=\\\"col-6 text-right\\\">\\n            <a [routerLink]=\\\"['/register']\\\" class=\\\"text-light\\\"><small>Create new account</small></a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  \"","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AuthLayoutRoutes } from './auth-layout.routing';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpClientModule } from '@angular/common/http';\n//import { RouterModule } from '@angular/router';\nimport { LoginComponent } from '../../pages/login/login.component';\nimport { RegisterComponent } from '../../pages/register/register.component';\n\nimport { ResetpasswordComponent } from '../../pages/resetpassword/resetpassword.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(AuthLayoutRoutes),\n    FormsModule,\n    // NgbModule\n    ReactiveFormsModule,\n    HttpClientModule\n\n  ],\n  declarations: [\n    LoginComponent,\n    RegisterComponent,\n\n    ResetpasswordComponent\n  ]\n})\nexport class AuthLayoutModule { }\n","import { Routes } from '@angular/router';\n\nimport { LoginComponent } from '../../pages/login/login.component';\nimport { RegisterComponent } from '../../pages/register/register.component';\n\nimport { ResetpasswordComponent } from '../../pages/resetpassword/resetpassword.component';\nexport const AuthLayoutRoutes: Routes = [\n    { path: 'login', component: LoginComponent },\n    { path: 'register', component: RegisterComponent },\n\n    { path: 'reset', component: ResetpasswordComponent },\n];\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  error_messages: any = {};\n  params: any;\n  constructor(public router: Router, public formBuilder: FormBuilder, private http: HttpClient) {\n    this.setupLoginFormData();\n  }\n\n  ngOnInit(): void {\n  }\n  setupLoginFormData() {\n    this.error_messages = {\n      email: [\n        { type: \"required\", message: 'Email is Required' },\n        { type: \"pattern\", message: 'Please Enter valid Email' }\n      ],\n\n      password: [\n        { type: \"required\", message: 'Password is Required' }\n      ],\n    };\n    this.loginForm = this.formBuilder.group(\n      {\n        email: new FormControl(\n          \"\",\n          Validators.compose([\n            Validators.required,\n            Validators.pattern('^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$'),\n          ])\n        ),\n        password: new FormControl(\n          \"\",\n          Validators.compose([\n            Validators.required,\n          ])\n        ),\n      },\n    );\n  }\n\n  doLogin() {\n    this.params = {\n      \"email\": this.loginForm.value.email,\n      \"password\": this.loginForm.value.password,\n      // \"projectid\": \" 1\",\n    }\n    return new Promise((resolve, reject) => {\n      this.http.post(\"https://labs.80startups.com/api/v1/1/user/loginUser\", this.params).subscribe(result => {\n        console.log(result, \"result\");\n        // localStorage.setItem('token', JSON.stringify(result['users'].tokens))\n\n        this.router.navigateByUrl('/dashboard');\n      },\n        err => {\n          console.log(err);\n          alert(\"please enter correct email and password\");\n        }\n      );\n    });\n  }\n\n  register() {\n    console.log(\"register\");\n    this.router.navigateByUrl('/register');\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  signUpForm: FormGroup;\n  error_messages: any = {};\n  params: any;\n  constructor(public router: Router,\n    public formBuilder: FormBuilder, private http: HttpClient) {\n    this.setupLoginFormData();\n  }\n\n  ngOnInit(): void {\n  }\n  setupLoginFormData() {\n    this.error_messages = {\n\n\n      fname: [\n        { type: \"required\", message: 'First Name is Required' }\n      ],\n      lname: [\n        { type: \"required\", message: 'lname is Required' }\n      ],\n      phone: [\n        { type: \"required\", message: \"Phone Number  is required.\" },\n        { type: \"minlength\", message: \"minimun length should be 10 .\" },\n        { type: \"maxlength\", message: \"maximum length should be 12 .\" }\n      ],\n      mobile: [\n        { type: \"required\", message: \"mobile Number  is required.\" },\n        { type: \"minlength\", message: \"minimun length should be 10 .\" },\n        { type: \"maxlength\", message: \"maximum length should be 12 .\" }\n      ],\n      email: [\n        { type: \"required\", message: 'Email is Required' },\n        { type: \"pattern\", message: 'Please Enter valid Email' }\n      ],\n\n      password: [\n        { type: \"required\", message: \"Password is Required.\" },\n        { type: \"minlength\", message: \"minimun length should be 8 .\" },\n        { type: \"maxlength\", message: \"maximum length should be 12 .\" }\n      ],\n      projectid: [\n        { type: \"required\", message: \"Password is Required.\" },\n      ]\n\n\n\n\n\n    };\n    this.signUpForm = this.formBuilder.group(\n      {\n        fname: new FormControl(\n          \"\",\n          Validators.compose([\n            Validators.required,\n          ])\n        ),\n        lname: new FormControl(\n          \"\",\n          Validators.compose([\n            Validators.required,\n          ])\n        ),\n\n        mobile: new FormControl(\n          \"\",\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(10),\n            Validators.maxLength(12)\n          ])\n        ),\n        email: new FormControl(\n          \"\",\n          Validators.compose([\n            Validators.required,\n            Validators.pattern('^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$'),\n          ])\n        ),\n\n        password: new FormControl(\n          \"\",\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(8),\n            Validators.maxLength(12)\n          ])\n        ),\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      },\n    );\n  }\n\n\n  doRegister() {\n\n\n    this.params = {\n      \"fname\": this.signUpForm.controls.fname.value,\n      \"lname\": this.signUpForm.controls.lname.value,\n      \"mobile\": this.signUpForm.controls.mobile.value,\n\n      \"email\": this.signUpForm.controls.email.value,\n      \"password\": this.signUpForm.controls.password.value,\n      \"projectid\": \"1\",\n\n\n\n    }\n    return new Promise((resolve, reject) => {\n      this.http.post(\"https://labs.80startups.com/api/v1/1/user/createUser\", this.params).subscribe(result => {\n        console.log(\"result\", result);\n        this.router.navigateByUrl('/login')\n      },\n        err => {\n          console.log(err);\n          alert(\"please enter email and password\");\n          // reject(err);\n        }\n      );\n    });\n  }\n\n  signin() {\n    this.router.navigateByUrl('/login');\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Jlc2V0cGFzc3dvcmQvcmVzZXRwYXNzd29yZC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-resetpassword',\n  templateUrl: './resetpassword.component.html',\n  styleUrls: ['./resetpassword.component.css']\n})\nexport class ResetpasswordComponent implements OnInit {\n\n  loginForm: FormGroup;\n  error_messages: any = {};\n  params: any;\n  constructor(public router: Router,public formBuilder: FormBuilder, private http: HttpClient) {\n    this.setupLoginFormData();\n   }\n\n  ngOnInit(): void {\n  }\n  setupLoginFormData() {\n    this.error_messages = {\n      email: [\n        { type: \"required\", message: 'Email is Required' },\n        { type: \"pattern\", message: 'Please Enter valid Email' }\n      ],\n\n      \n    };\n    this.loginForm = this.formBuilder.group(\n      {\n        email: new FormControl(\n          \"\",\n          Validators.compose([\n            Validators.required,\n            Validators.pattern('^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$'),\n          ])\n        ),\n        \n      },\n    );\n  }\n\n  doLogin() {\n    this.params = {\n      \"email\": this.loginForm.value.email,\n      \n    }\n    return new Promise((resolve, reject) => {\n      this.http.post(\"https://api.80startups.com/auth/loginUser/1\", this.params).subscribe(result => {\n        console.log(result,\"result\");\n        this.router.navigateByUrl('/AddAddress');\n      },\n        err => {\n          console.log(err);\n          alert(\"please enter correct email and password\");\n        }\n      );\n    });\n  }\n\n \n\n}\n"],"sourceRoot":"webpack:///"}