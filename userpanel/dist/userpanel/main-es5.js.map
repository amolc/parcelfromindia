{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/admin/add-address/add-address.component.ts","webpack:///src/app/admin/add-address/add-address.component.html","webpack:///src/app/admin/forgotpassword/forgotpassword.component.ts","webpack:///src/app/admin/forgotpassword/forgotpassword.component.html","webpack:///src/app/admin/login/login.component.ts","webpack:///src/app/admin/login/login.component.html","webpack:///src/app/admin/logout/logout.component.ts","webpack:///src/app/admin/logout/logout.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dashboradPanel/dashborad/dashborad.component.ts","webpack:///src/app/dashboradPanel/dashborad/dashborad.component.html","webpack:///src/app/dashboradPanel/pickup/pickup.component.ts","webpack:///src/app/dashboradPanel/pickup/pickup.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AddAddressComponent","formBuilder","http","router","error_messages","fname","lname","address","address2","city","state","country","mobile","postal_code","setupAddressFormData","event","target","value","addresForm","controls","type","message","fnames","lnames","address1","addresss2","city1","state1","country1","postal_code1","mobile1","group","compose","required","minLength","maxLength","params","reject","post","subscribe","result","console","log","navigateByUrl","err","alert","checkvalue","addres","selector","templateUrl","styleUrls","ForgotpasswordComponent","LoginComponent","setupLoginFormData","email","password","loginForm","pattern","doLogin","register","LogoutComponent","phone","project_id","signUpForm","doRegister","signin","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","declarations","providers","bootstrap","DashboradComponent","PickupComponent","environment","production","bootstrapModule","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,sE,CACA;;;;;ACuBqB;;AAEI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAHP;;AACG;;AAIJ;;;;;;;;AAJ+B;;AAAA;;;;;;AAYxB;;AAEI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAHP;;AACG;;AAIJ;;;;;;;;AAJ+B;;AAAA;;;;;;AAe9B;;AAEI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAHN;;AACE;;AAIJ;;;;;;;;AAJ+B;;AAAA;;;;;;AAe3B;;AAEI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAHN;;AACE;;AAIJ;;;;;;;;AAJ+B;;AAAA;;;;;;AAcxB;;AAEI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAHN;;AACE;;AAIJ;;;;;;;;AAJ+B;;AAAA;;;;;;AAkB3B;;AAEI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAHP;;AACG;;AAIJ;;;;;;;;AAJ+B;;AAAA;;;;;;AAc9B;;AAEI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAHN;;AACE;;AAIJ;;;;;;;;AAJ+B;;AAAA;;;;;;AAa3B;;AAEI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAHN;;AACE;;AAIJ;;;;;;;;AAJ+B;;AAAA;;;;;;AAgB9B;;AAEI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAHN;;AACE;;AAIJ;;;;;;;;AAJ+B;;AAAA;;;;;;AAsCxB;;AAEI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAHN;;AACE;;AAIJ;;;;;;;;AAJ+B;;AAAA;;;;;;AAY3B;;AAEI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAHN;;AACE;;AAIJ;;;;;;;;AAJ+B;;AAAA;;;;;;AAe3B;;AAEI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAHP;;AACG;;AAIJ;;;;;;;;AAJ+B;;AAAA;;;;;;AAc9B;;AAEI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAHN;;AACE;;AAIJ;;;;;;;;AAJ+B;;AAAA;;;;;;AAexB;;AAEI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAHP;;AACG;;AAIJ;;;;;;;;AAJ+B;;AAAA;;;;;;AAY3B;;AAEI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAHP;;AACG;;AAIJ;;;;;;;;AAJ+B;;AAAA;;;;;;AAc3B;;AAEI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAHP;;AACG;;AAIJ;;;;;;;;AAJ+B;;AAAA;;;;;;AAa3B;;AAEI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAHN;;AACE;;AAIJ;;;;;;;;AAJ+B;;AAAA;;;;;;AAgBjC;;AAEI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAHP;;AACG;;AAIJ;;;;;;;;AAJ+B;;AAAA;;;;QDvR7BC,mB;AAIX,mCACSC,WADT,EAEUC,IAFV,EAGSC,MAHT,EAGuB;AAAA;;AAFd,aAAAF,WAAA,GAAAA,WAAA;AACC,aAAAC,IAAA,GAAAA,IAAA;AACD,aAAAC,MAAA,GAAAA,MAAA;AALT,aAAAC,cAAA,GAAsB,EAAtB;AASA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,OAAA,GAAU,EAAV;AACA,aAAAC,QAAA,GAAW,EAAX;AACA,aAAAC,IAAA,GAAO,EAAP;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,OAAA,GAAU,EAAV;AACA,aAAAC,MAAA,GAAS,EAAT;AACA,aAAAC,WAAA,GAAc,EAAd;AAVE,aAAKC,oBAAL;AACD;;;;mCAWUC,K,EAAO;AAChB,cAAIA,KAAK,CAACC,MAAN,CAAaC,KAAb,IAAsB,KAA1B,EAAiC;AAC/B;AACA;AACC,iBAAKZ,KAAL,GAAa,KAAKa,UAAL,CAAgBC,QAAhB,CAAyBd,KAAzB,CAA+BY,KAA7C,EACG,KAAKX,KAAL,GAAa,KAAKY,UAAL,CAAgBC,QAAhB,CAAyBb,KAAzB,CAA+BW,KAD/C,EAEG,KAAKV,OAAL,GAAe,KAAKW,UAAL,CAAgBC,QAAhB,CAAyBZ,OAAzB,CAAiCU,KAFnD,EAGG,KAAKT,QAAL,GAAgB,KAAKU,UAAL,CAAgBC,QAAhB,CAAyBX,QAAzB,CAAkCS,KAHrD,EAIG,KAAKR,IAAL,GAAY,KAAKS,UAAL,CAAgBC,QAAhB,CAAyBV,IAAzB,CAA8BQ,KAJ7C,EAKG,KAAKP,KAAL,GAAa,KAAKQ,UAAL,CAAgBC,QAAhB,CAAyBT,KAAzB,CAA+BO,KAL/C,EAMG,KAAKN,OAAL,GAAe,KAAKO,UAAL,CAAgBC,QAAhB,CAAyBR,OAAzB,CAAiCM,KANnD,EAOG,KAAKL,MAAL,GAAc,KAAKM,UAAL,CAAgBC,QAAhB,CAAyBP,MAAzB,CAAgCK,KAPjD,EAQG,KAAKJ,WAAL,GAAmB,KAAKK,UAAL,CAAgBC,QAAhB,CAAyBN,WAAzB,CAAqCI,KAR3D;AASD,WAZD,MAYO;AACJ,iBAAKZ,KAAL,GAAa,IAAd,EACG,KAAKC,KAAL,GAAa,IADhB,EAEG,KAAKC,OAAL,GAAe,IAFlB,EAGG,KAAKC,QAAL,GAAgB,IAHnB,EAIG,KAAKC,IAAL,GAAY,IAJf,EAKG,KAAKC,KAAL,GAAa,IALhB,EAMG,KAAKC,OAAL,GAAe,IANlB,EAOG,KAAKC,MAAL,GAAc,IAPjB,EAQG,KAAKC,WAAL,GAAmB,IARtB;AASD;AACF;;;+CAEsB;AACrB,eAAKT,cAAL,GAAsB;AACpBC,iBAAK,EAAE,CAAC;AAAEe,kBAAI,EAAE,UAAR;AAAoBC,qBAAO,EAAE;AAA7B,aAAD,CADa;AAEpBf,iBAAK,EAAE,CAAC;AAAEc,kBAAI,EAAE,UAAR;AAAoBC,qBAAO,EAAE;AAA7B,aAAD,CAFa;AAIpBd,mBAAO,EAAE,CAAC;AAAEa,kBAAI,EAAE,UAAR;AAAoBC,qBAAO,EAAE;AAA7B,aAAD,CAJW;AAKpBb,oBAAQ,EAAE,CAAC;AAAEY,kBAAI,EAAE,UAAR;AAAoBC,qBAAO,EAAE;AAA7B,aAAD,CALU;AAMpBZ,gBAAI,EAAE,CAAC;AAAEW,kBAAI,EAAE,UAAR;AAAoBC,qBAAO,EAAE;AAA7B,aAAD,CANc;AAOpBX,iBAAK,EAAE,CAAC;AAAEU,kBAAI,EAAE,UAAR;AAAoBC,qBAAO,EAAE;AAA7B,aAAD,CAPa;AAQpBV,mBAAO,EAAE,CAAC;AAAES,kBAAI,EAAE,UAAR;AAAoBC,qBAAO,EAAE;AAA7B,aAAD,CARW;AASpBR,uBAAW,EAAE,CAAC;AAAEO,kBAAI,EAAE,UAAR;AAAoBC,qBAAO,EAAE;AAA7B,aAAD,CATO;AAUpBT,kBAAM,EAAE,CACN;AAAEQ,kBAAI,EAAE,UAAR;AAAoBC,qBAAO,EAAE;AAA7B,aADM,EAEN;AAAED,kBAAI,EAAE,WAAR;AAAqBC,qBAAO,EAAE;AAA9B,aAFM,EAGN;AAAED,kBAAI,EAAE,WAAR;AAAqBC,qBAAO,EAAE;AAA9B,aAHM,CAVY;AAgBpBC,kBAAM,EAAE,CAAC;AAAEF,kBAAI,EAAE,UAAR;AAAoBC,qBAAO,EAAE;AAA7B,aAAD,CAhBY;AAiBpBE,kBAAM,EAAE,CAAC;AAAEH,kBAAI,EAAE,UAAR;AAAoBC,qBAAO,EAAE;AAA7B,aAAD,CAjBY;AAmBpBG,oBAAQ,EAAE,CAAC;AAAEJ,kBAAI,EAAE,UAAR;AAAoBC,qBAAO,EAAE;AAA7B,aAAD,CAnBU;AAoBpBI,qBAAS,EAAE,CAAC;AAAEL,kBAAI,EAAE,UAAR;AAAoBC,qBAAO,EAAE;AAA7B,aAAD,CApBS;AAqBpBK,iBAAK,EAAE,CAAC;AAAEN,kBAAI,EAAE,UAAR;AAAoBC,qBAAO,EAAE;AAA7B,aAAD,CArBa;AAsBpBM,kBAAM,EAAE,CAAC;AAAEP,kBAAI,EAAE,UAAR;AAAoBC,qBAAO,EAAE;AAA7B,aAAD,CAtBY;AAuBpBO,oBAAQ,EAAE,CAAC;AAAER,kBAAI,EAAE,UAAR;AAAoBC,qBAAO,EAAE;AAA7B,aAAD,CAvBU;AAwBpBQ,wBAAY,EAAE,CACZ;AAAET,kBAAI,EAAE,UAAR;AAAoBC,qBAAO,EAAE;AAA7B,aADY,CAxBM;AA2BpBS,mBAAO,EAAE,CACP;AAAEV,kBAAI,EAAE,UAAR;AAAoBC,qBAAO,EAAE;AAA7B,aADO,EAEP;AAAED,kBAAI,EAAE,WAAR;AAAqBC,qBAAO,EAAE;AAA9B,aAFO,EAGP;AAAED,kBAAI,EAAE,WAAR;AAAqBC,qBAAO,EAAE;AAA9B,aAHO;AA3BW,WAAtB;AAiCA,eAAKH,UAAL,GAAkB,KAAKjB,WAAL,CAAiB8B,KAAjB,CAAuB;AACvC1B,iBAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAW2B,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAApB,CADgC;AAEvC3B,iBAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAW0B,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAApB,CAFgC;AAIvC1B,mBAAO,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWyB,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAApB,CAJ8B;AAKvCzB,oBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWwB,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAApB,CAL6B;AAMvCxB,gBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWuB,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAApB,CANiC;AAOvCvB,iBAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWsB,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAApB,CAPgC;AAQvCtB,mBAAO,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWqB,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAApB,CAR8B;AASvCpB,uBAAW,EAAE,IAAI,0DAAJ,CACX,EADW,EAEX,0DAAWmB,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAFW,CAT0B;AAavCrB,kBAAM,EAAE,IAAI,0DAAJ,CACN,EADM,EAEN,0DAAWoB,OAAX,CAAmB,CACjB,0DAAWC,QADM,EAEjB,0DAAWC,SAAX,CAAqB,EAArB,CAFiB,EAGjB,0DAAWC,SAAX,CAAqB,EAArB,CAHiB,CAAnB,CAFM,CAb+B;AAqBvCb,kBAAM,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWU,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAApB,CArB+B;AAsBvCV,kBAAM,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWS,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAApB,CAtB+B;AAwBvCT,oBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWQ,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAApB,CAxB6B;AAyBvCR,qBAAS,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWO,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAApB,CAzB4B;AA0BvCP,iBAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWM,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAApB,CA1BgC;AA2BvCN,kBAAM,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWK,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAApB,CA3B+B;AA4BvCL,oBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWI,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAApB,CA5B6B;AA6BvCJ,wBAAY,EAAE,IAAI,0DAAJ,CACZ,EADY,EAEZ,0DAAWG,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAFY,CA7ByB;AAiCvCH,mBAAO,EAAE,IAAI,0DAAJ,CACP,EADO,EAEP,0DAAWE,OAAX,CAAmB,CACjB,0DAAWC,QADM,EAEjB,0DAAWC,SAAX,CAAqB,EAArB,CAFiB,EAGjB,0DAAWC,SAAX,CAAqB,EAArB,CAHiB,CAAnB,CAFO;AAjC8B,WAAvB,CAAlB;AA0CD;;;mCACO,CAAW;;;iCACV;AAAA;;AACP,eAAKC,MAAL,GAAc;AACZ/B,iBAAK,EAAE,KAAKa,UAAL,CAAgBC,QAAhB,CAAyBd,KAAzB,CAA+BY,KAD1B;AAEZX,iBAAK,EAAE,KAAKY,UAAL,CAAgBC,QAAhB,CAAyBb,KAAzB,CAA+BW,KAF1B;AAGZV,mBAAO,EAAE,KAAKW,UAAL,CAAgBC,QAAhB,CAAyBZ,OAAzB,CAAiCU,KAH9B;AAIZT,oBAAQ,EAAE,KAAKU,UAAL,CAAgBC,QAAhB,CAAyBX,QAAzB,CAAkCS,KAJhC;AAKZL,kBAAM,EAAE,KAAKM,UAAL,CAAgBC,QAAhB,CAAyBP,MAAzB,CAAgCK,KAL5B;AAOZR,gBAAI,EAAE,KAAKS,UAAL,CAAgBC,QAAhB,CAAyBV,IAAzB,CAA8BQ,KAPxB;AAQZP,iBAAK,EAAE,KAAKQ,UAAL,CAAgBC,QAAhB,CAAyBT,KAAzB,CAA+BO,KAR1B;AASZN,mBAAO,EAAE,KAAKO,UAAL,CAAgBC,QAAhB,CAAyBR,OAAzB,CAAiCM,KAT9B;AAUZJ,uBAAW,EAAE,KAAKK,UAAL,CAAgBC,QAAhB,CAAyBN,WAAzB,CAAqCI,KAVtC;AAYZK,kBAAM,EACJ,KAAKJ,UAAL,CAAgBC,QAAhB,CAAyBG,MAAzB,CAAgCL,KAAhC,IAAyC,EAAzC,GACI,KAAKZ,KADT,GAEI,KAAKa,UAAL,CAAgBC,QAAhB,CAAyBG,MAAzB,CAAgCL,KAf1B;AAiBZM,kBAAM,EACJ,KAAKL,UAAL,CAAgBC,QAAhB,CAAyBI,MAAzB,CAAgCN,KAAhC,IAAyC,EAAzC,GACI,KAAKX,KADT,GAEI,KAAKY,UAAL,CAAgBC,QAAhB,CAAyBI,MAAzB,CAAgCN,KApB1B;AAsBZO,oBAAQ,EACN,KAAKN,UAAL,CAAgBC,QAAhB,CAAyBK,QAAzB,CAAkCP,KAAlC,IAA2C,EAA3C,GACI,KAAKV,OADT,GAEI,KAAKW,UAAL,CAAgBC,QAAhB,CAAyBK,QAAzB,CAAkCP,KAzB5B;AA2BZQ,qBAAS,EACP,KAAKP,UAAL,CAAgBC,QAAhB,CAAyBM,SAAzB,CAAmCR,KAAnC,IAA4C,EAA5C,GACI,KAAKT,QADT,GAEI,KAAKU,UAAL,CAAgBC,QAAhB,CAAyBM,SAAzB,CAAmCR,KA9B7B;AAgCZa,mBAAO,EACL,KAAKZ,UAAL,CAAgBC,QAAhB,CAAyBW,OAAzB,CAAiCb,KAAjC,IAA0C,EAA1C,GACI,KAAKL,MADT,GAEI,KAAKM,UAAL,CAAgBC,QAAhB,CAAyBW,OAAzB,CAAiCb,KAnC3B;AAqCZS,iBAAK,EACH,KAAKR,UAAL,CAAgBC,QAAhB,CAAyBO,KAAzB,CAA+BT,KAA/B,IAAwC,EAAxC,GACI,KAAKR,IADT,GAEI,KAAKS,UAAL,CAAgBC,QAAhB,CAAyBO,KAAzB,CAA+BT,KAxCzB;AA0CZU,kBAAM,EACJ,KAAKT,UAAL,CAAgBC,QAAhB,CAAyBQ,MAAzB,CAAgCV,KAAhC,IAAyC,EAAzC,GACI,KAAKP,KADT,GAEI,KAAKQ,UAAL,CAAgBC,QAAhB,CAAyBQ,MAAzB,CAAgCV,KA7C1B;AA+CZW,oBAAQ,EACN,KAAKV,UAAL,CAAgBC,QAAhB,CAAyBS,QAAzB,CAAkCX,KAAlC,IAA2C,EAA3C,GACI,KAAKN,OADT,GAEI,KAAKO,UAAL,CAAgBC,QAAhB,CAAyBS,QAAzB,CAAkCX,KAlD5B;AAoDZY,wBAAY,EACV,KAAKX,UAAL,CAAgBC,QAAhB,CAAyBU,YAAzB,CAAsCZ,KAAtC,IAA+C,EAA/C,GACI,KAAKJ,WADT,GAEI,KAAKK,UAAL,CAAgBC,QAAhB,CAAyBU,YAAzB,CAAsCZ;AAvDhC,WAAd,CADO,CA0DP;;AACA,iBAAO,IAAI3B,OAAJ,CAAY,UAACC,OAAD,EAAU8C,MAAV,EAAqB;AACtC,iBAAI,CAACnC,IAAL,CAAUoC,IAAV,CAAe,4CAAf,EAA6D,KAAI,CAACF,MAAlE,EAA0EG,SAA1E,CAAoF,UAAAC,MAAM,EAAI;AAC5FC,qBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;;AACA,mBAAI,CAACrC,MAAL,CAAYwC,aAAZ,CAA0B,YAA1B;AACD,aAHD,EAIE,UAAAC,GAAG,EAAI;AACLH,qBAAO,CAACC,GAAR,CAAYE,GAAZ;AACAC,mBAAK,CAAC,oBAAD,CAAL,CAFK,CAGL;AACD,aARH;AAUD,WAXM,CAAP;AAYD;;;;;;;uBApMU7C,mB,EAAmB,2H,EAAA,gI,EAAA,uH;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,gB;AAAA,c;AAAA,2xI;AAAA;AAAA;ACVhC;;AACI;;AACG;;AAA+C;;AAA4C;;AAC9F;;AACC;;AACE;;AAA8C;;AAAsC;;AAEvF;;AACA;;AACG;;AACG;;AACG;;AACI;;AAAyD;;AAA4B;;AACtF;;AAEG;;AAEG;;AACA;;AACA;;AACA;;AACJ;;AACA;;AAMC;;AACG;;AACA;;AACA;;AACA;;AACD;;AACA;;AAML;;AACD;;AACI;;AACG;;AACE;;AACF;;AACD;;AAEF;;AACA;;AAMH;;AACD;;AACI;;AACG;;AACD;;AACC;;AACD;;AAEF;;AACA;;AAMH;;AAEG;;AACA;;AACG;;AACA;;AACA;;AACA;;AACA;;AAMA;;AAIH;;AACA;;AACG;;AACA;;AACA;;AACA;;AAED;;AACA;;AAML;;AACA;;AACG;;AACG;;AACC;;AACD;;AACA;;AACH;;AACA;;AAMA;;AACG;;AACA;;AACA;;AACA;;AACC;;AACJ;;AACA;;AAMJ;;AACC;;AAEG;;AACG;;AACA;;AACA;;AACA;;AACH;;AACH;;AACA;;AAOA;;AACG;;AAEG;;AACA;;AACA;;AACA;;AACC;;AACG;;AAAoE;AAAA,mBAAS,IAAA8C,UAAA,QAAT;AAA2B,WAA3B;;AAApE;;AACJ;;AACA;;AACA;;AACA;;AACI;;AAAmE;AAAA,mBAAS,IAAAA,UAAA,QAAT;AAA2B,WAA3B;;AAAnE;;AAEJ;;AACA;;AACA;;AACH;;AACH;;AAEC;;AACV;;AAA8C;;AAAgB;;AACjE;;AACY;;AACG;;AACG;;AACA;;AACA;;AACA;;AACH;;AACA;;AAMA;;AACG;;AACA;;AACA;;AACA;;AACH;;AACA;;AAMH;;AACG;;AACA;;AACG;;AACE;;AACF;;AACD;;AACF;;AACD;;AACA;;AAMD;;AACE;;AACG;;AACE;;AACF;;AACD;;AACF;;AACH;;AACA;;AAOG;;AACA;;AACG;;AACA;;AACA;;AACA;;A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A;;AACG;;AACG;;AACA;;AAEG;;AACG;;AACG;;AACG;;AACG;;AAAM;;AAAkC;;AAA+B;;AAEvE;;AACH;;AAEA;;AACG;;AAAM;;AAAkC;;AAAqC;;AAC9E;;AACC;;AACH;;AACA;;AACG;;AAAM;;AAAkC;;AAAqC;;AAC7E;;AACA;;AACH;;AACA;;AACG;;AAAM;;AAAkC;;AAAsC;;AAC9E;;AACA;;AACH;;AACA;;AACG;;AAAM;;AAAkC;;AAAsC;;AAC7E;;AACD;;AACH;;AAEA;;AAEH;;AACH;;AAGH;;AACH;;AACH;;AACH;;AACH;;AACH;;AACH;;AACA;;AACG;;AACG;;AACG;;AACG;;AACG;;AACG;;AACI;;AACI;;AAAgF;;AACrF;;AACH;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAAqC;;AACrC;;AACA;;AACG;;AACH;;AACA;;AAEA;;AAAiD;;AAAK;;AAGtD;;AACA;;AAEH;;AACH;;AACH;;AACA;;AACG;;AACG;;AACG;;AAA8B;;AAA4C;;AAAiF;;AACxJ;;AACH;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAAqC;;AACrC;;AACA;;AACG;;AACH;;AACA;;AACA;;AAAiD;;AAAK;;AACtD;;AACA;;AAEH;;AACH;;AACH;;AACA;;AACG;;AACG;;AACG;;AAA8B;;AAA4C;;AAAsF;;AAC7J;;AACH;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAAqC;;AACrC;;AACA;;AACG;;AACH;;AACA;;AAEE;;AAAiD;;AAAK;;AACxD;;AACA;;AAEH;;AACH;;AACH;;AACA;;AACG;;AACG;;AACG;;AAA8B;;AAA4C;;AAAsF;;AAC7J;;AACH;;AACA;;AACA;;AACA;;AACA;;AACA;;AACD;;AAAqC;;AACpC;;AACA;;AACG;;AACH;;AACA;;AAEE;;AAAiD;;AAAK;;AACxD;;AACA;;AAEH;;AACD;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;;;sEDlNSA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACThC,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;AEP/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa+B,e;AAEX,iCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA,gB;AAAA,a;AAAA,y+G;AAAA;AAAA;ACN5B;;AACI;;AACI;;AACG;;AACG;;AACG;;AACH;;AACH;;AACH;;AACJ;;AAEA;;AACG;;AACG;;AACG;;AACG;;AACI;;AACG;;AACM;;AACN;;AAAO;;AACN;;AAA8D;;AAAG;;AAAwB;;AAAI;;AACjG;;AACH;;AAED;;AAEG;;AAEG;;AACA;;AACA;;AACA;;AACJ;;AAEC;;AACG;;AACA;;AACA;;AACA;;AACD;;AAEL;;AACD;;AACI;;AACG;;AACE;;AACF;;AACD;;AAEF;;AAEH;;AACD;;AACI;;AACG;;AACD;;AACC;;AACD;;AAEF;;AAEH;;AAEG;;AACA;;AACG;;AACA;;AACA;;AACA;;AAEA;;AAIH;;AACA;;AACG;;AACA;;AACA;;AACA;;AAED;;AAEL;;AACA;;AACG;;AACG;;AACC;;AACD;;AACA;;AACH;;AAEA;;AACG;;AACA;;AACA;;AACA;;AACC;;AACJ;;AAEJ;;AACA;;AACC;;AACG;;AACC;;AACD;;AACA;;AACH;;AAEA;;AACG;;AACA;;AACA;;AACA;;AACC;;AACJ;;AAEJ;;AACA;;AACA;;AACA;;AACI;;AACG;;AACM;;AACN;;AACH;;AACH;;AACI;;AACA;;AACD;;AACC;;AACG;;AACI;;AACJ;;AACA;;AACF;;AACA;;AACE;;AACA;;AACA;;AACA;;AACF;;AACD;;AACG;;AACC;;AACD;;AACA;;AACF;;AACD;;AACG;;AACA;;AACA;;AACA;;AACH;;AACD;;AACG;;AACA;;AACC;;AACI;;AACJ;;AACA;;AACD;;AACD;;AAED;;AACE;;AACC;;AACI;;AAAqB;;AACzB;;AACI;;AACL;;AACH;;AAEA;;AACI;;AACA;;AACA;;AACA;;AACA;;AAAQ;;AACR;;AACA;;AACA;;AACJ;;AACH;;AACH;;AACH;;AAEH;;AACH;;;;;;;;;sEDtLYA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTjC,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMgC,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAxC,GAAG;AAAA,aAAIH,OAAO,CAAC4C,KAAR,CAAczC,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n//import { UserService } from '../user.service';\nimport {FormBuilder,FormControl,FormGroup,Validators,} from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { from } from 'rxjs';\n@Component({\n  selector: 'app-add-address',\n  templateUrl: './add-address.component.html',\n  styleUrls: ['./add-address.component.css'],\n})\nexport class AddAddressComponent implements OnInit {\n  addresForm: FormGroup;\n  error_messages: any = {};\n  params: any;\n  constructor(\n    public formBuilder: FormBuilder,\n    private http: HttpClient,\n    public router: Router\n  ) {\n    this.setupAddressFormData();\n  }\n  fname = '';\n  lname = '';\n  address = '';\n  address2 = '';\n  city = '';\n  state = '';\n  country = '';\n  mobile = '';\n  postal_code = '';\n\n  checkvalue(event) {\n    if (event.target.value == 'yes') {\n      //this.addressForm.value.fname=this.addressForm.value.fname\n      //this.addressForm.value.fname=this.addressForm.value.fname\n      (this.fname = this.addresForm.controls.fname.value),\n        (this.lname = this.addresForm.controls.lname.value),\n        (this.address = this.addresForm.controls.address.value),\n        (this.address2 = this.addresForm.controls.address2.value),\n        (this.city = this.addresForm.controls.city.value),\n        (this.state = this.addresForm.controls.state.value),\n        (this.country = this.addresForm.controls.country.value),\n        (this.mobile = this.addresForm.controls.mobile.value),\n        (this.postal_code = this.addresForm.controls.postal_code.value);\n    } else {\n      (this.fname = null),\n        (this.lname = null),\n        (this.address = null),\n        (this.address2 = null),\n        (this.city = null),\n        (this.state = null),\n        (this.country = null),\n        (this.mobile = null),\n        (this.postal_code = null);\n    }\n  }\n\n  setupAddressFormData() {\n    this.error_messages = {\n      fname: [{ type: 'required', message: 'First Name is Required' }],\n      lname: [{ type: 'required', message: 'lname is Required' }],\n\n      address: [{ type: 'required', message: 'address  is required.' }],\n      address2: [{ type: 'required', message: 'address2  is required.' }],\n      city: [{ type: 'required', message: 'city  is required.' }],\n      state: [{ type: 'required', message: 'state  is required.' }],\n      country: [{ type: 'required', message: 'country  is required.' }],\n      postal_code: [{ type: 'required', message: 'postal code  is required.' }],\n      mobile: [\n        { type: 'required', message: 'mobile Number  is required.' },\n        { type: 'minlength', message: 'minimun length should be 10 .' },\n        { type: 'maxlength', message: 'maximum length should be 12 .' },\n      ],\n\n      fnames: [{ type: 'required', message: 'First Name is Required' }],\n      lnames: [{ type: 'required', message: 'lname is Required' }],\n\n      address1: [{ type: 'required', message: 'address  is required.' }],\n      addresss2: [{ type: 'required', message: 'address2  is required.' }],\n      city1: [{ type: 'required', message: 'city  is required.' }],\n      state1: [{ type: 'required', message: 'state  is required.' }],\n      country1: [{ type: 'required', message: 'country  is required.' }],\n      postal_code1: [\n        { type: 'required', message: 'postal code  is required.' },\n      ],\n      mobile1: [\n        { type: 'required', message: 'mobile Number  is required.' },\n        { type: 'minlength', message: 'minimun length should be 10 .' },\n        { type: 'maxlength', message: 'maximum length should be 12 .' },\n      ],\n    };\n    this.addresForm = this.formBuilder.group({\n      fname: new FormControl('', Validators.compose([Validators.required])),\n      lname: new FormControl('', Validators.compose([Validators.required])),\n\n      address: new FormControl('', Validators.compose([Validators.required])),\n      address2: new FormControl('', Validators.compose([Validators.required])),\n      city: new FormControl('', Validators.compose([Validators.required])),\n      state: new FormControl('', Validators.compose([Validators.required])),\n      country: new FormControl('', Validators.compose([Validators.required])),\n      postal_code: new FormControl(\n        '',\n        Validators.compose([Validators.required])\n      ),\n      mobile: new FormControl(\n        '',\n        Validators.compose([\n          Validators.required,\n          Validators.minLength(10),\n          Validators.maxLength(12),\n        ])\n      ),\n      fnames: new FormControl('', Validators.compose([Validators.required])),\n      lnames: new FormControl('', Validators.compose([Validators.required])),\n\n      address1: new FormControl('', Validators.compose([Validators.required])),\n      addresss2: new FormControl('', Validators.compose([Validators.required])),\n      city1: new FormControl('', Validators.compose([Validators.required])),\n      state1: new FormControl('', Validators.compose([Validators.required])),\n      country1: new FormControl('', Validators.compose([Validators.required])),\n      postal_code1: new FormControl(\n        '',\n        Validators.compose([Validators.required])\n      ),\n      mobile1: new FormControl(\n        '',\n        Validators.compose([\n          Validators.required,\n          Validators.minLength(10),\n          Validators.maxLength(12),\n        ])\n      ),\n    });\n  }\n  ngOnInit(): void {}\n  addres() {\n    this.params = {\n      fname: this.addresForm.controls.fname.value,\n      lname: this.addresForm.controls.lname.value,\n      address: this.addresForm.controls.address.value,\n      address2: this.addresForm.controls.address2.value,\n      mobile: this.addresForm.controls.mobile.value,\n\n      city: this.addresForm.controls.city.value,\n      state: this.addresForm.controls.state.value,\n      country: this.addresForm.controls.country.value,\n      postal_code: this.addresForm.controls.postal_code.value,\n\n      fnames:\n        this.addresForm.controls.fnames.value == ''\n          ? this.fname\n          : this.addresForm.controls.fnames.value,\n\n      lnames:\n        this.addresForm.controls.lnames.value == ''\n          ? this.lname\n          : this.addresForm.controls.lnames.value,\n\n      address1:\n        this.addresForm.controls.address1.value == ''\n          ? this.address\n          : this.addresForm.controls.address1.value,\n\n      addresss2:\n        this.addresForm.controls.addresss2.value == ''\n          ? this.address2\n          : this.addresForm.controls.addresss2.value,\n\n      mobile1:\n        this.addresForm.controls.mobile1.value == ''\n          ? this.mobile\n          : this.addresForm.controls.mobile1.value,\n\n      city1:\n        this.addresForm.controls.city1.value == ''\n          ? this.city\n          : this.addresForm.controls.city1.value,\n\n      state1:\n        this.addresForm.controls.state1.value == ''\n          ? this.state\n          : this.addresForm.controls.state1.value,\n\n      country1:\n        this.addresForm.controls.country1.value == ''\n          ? this.country\n          : this.addresForm.controls.country1.value,\n\n      postal_code1:\n        this.addresForm.controls.postal_code1.value == ''\n          ? this.postal_code\n          : this.addresForm.controls.postal_code1.value,\n    };\n    //console.log(this.params);\n    return new Promise((resolve, reject) => {\n      this.http.post(\"https://api.80startups.com/user/createUser\", this.params).subscribe(result => {\n        console.log(\"result\", result);\n        this.router.navigateByUrl('/DashBorad')\n      },\n        err => {\n          console.log(err);\n          alert(\"please enter fill \");\n          // reject(err);\n        }\n      ); \n    }); \n  }\n}","\n<div class=\"container clearfix py-5\">\n    <div class=\"heading-block nobottomborder topmargin-sm center divcenter mb-0 clearfix\" style=\"max-width: 750px\">\n       <p style=\"font-size: 1.5rem;font-weight: 600;\">One Step Away From Getting Your Loved Stuff!</p>\n    </div>\n     <div class=\"heading-block nobottomborder topmargin-sm center divcenter mb-0 clearfix\" style=\"max-width: 750px\">\n       <p style=\"font-size: 1 rem;font-weight: 600;\">Please fill below your billing address</p>\n      \n    </div>\n    <div class=\"container clearfix divcenter\" style=\"max-width: 900px;\">\n       <div class=\" nobottommargin\">\n          <form class=\"m-form m-form--fit m-form--label-align-right m-form--group-seperator-dashed\" autocomplete=\"off\"  [formGroup]=\"addresForm\">\n             <div class=\"m-portlet__body\">\n                 <p style=\"color:#f21515;font-size:12px;text-align:left;\">(*) All fields are mandatory</p>\n                <div class=\"form-group m-form__group row\">\n                    \n                   <div class=\"col-lg-6 col-md-4\">\n                        \n                      <label>\n                      First Name: \n                      </label>\n                      <input type=\"text\" class=\"form-control m-input\" placeholder=\"Enter first name\" name=\"fname\" id=\"fname\"  formControlName=\"fname\" required >\n                  </div>\n                  <ng-container *ngFor=\"let error of error_messages.fname\">\n                     <div class=\"error-message\" *ngIf=\"addresForm.get('fname').hasError(error.type) &&\n                     (addresForm.get('fname').dirty || addresForm.get('fname').touched)\">\n                         {{ error.message }}\n                     </div>\n                 </ng-container>\n                   <div class=\"col-lg-6 col-md-4 topgap\">\n                      <label class=\"\">\n                      Last Name: \n                      </label>\n                      <input type=\"text\" class=\"form-control m-input\" placeholder=\"Enter last name\" name=\"lname\" id=\"lname\" formControlName=\"lname\" required >\n                     </div>\n                     <ng-container *ngFor=\"let error of error_messages.lname\">\n                        <div class=\"error-message\" *ngIf=\"addresForm.get('lname').hasError(error.type) &&\n                        (addresForm.get('lname').dirty || addresForm.get('lname').touched)\">\n                            {{ error.message }}\n                        </div>\n                    </ng-container>\n                </div>\n               <div class=\"form-group m-form__group row topgap\">\n                   <div class=\"col-lg-12 col-md-10\">\n                      <label>\n                        address \n                      </label>\n                     <textarea type=\"text\" rows=\"4\" class=\"form-control\" placeholder=\"Please enter House/Flat Number, Building Name/ Apartment Name\" name=\"address\" id=\"address\" formControlName=\"address\" required ></textarea>\n                                                         \n                   </div>\n                   <ng-container *ngFor=\"let error of error_messages.address\">\n                     <div class=\"error-message\" *ngIf=\"addresForm.get('address').hasError(error.type) &&\n                     (addresForm.get('address').dirty || addresForm.get('address').touched)\">\n                         {{ error.message }}\n                     </div>\n                 </ng-container>\n                </div>\n               <div class=\"form-group m-form__group row topgap\">\n                   <div class=\"col-lg-12 col-md-10\">\n                      <label>\n                     2nd address \n                      </label>\n                     <textarea type=\"text\" rows=\"4\" class=\"form-control\" placeholder=\"Please enter Street Name, Locality\" name=\"address2\" id=\"address2\" formControlName=\"address2\" required ></textarea>\n                                                         \n                   </div>\n                   <ng-container *ngFor=\"let error of error_messages.address2\">\n                     <div class=\"error-message\" *ngIf=\"addresForm.get('address2').hasError(error.type) &&\n                     (addresForm.get('address2').dirty || addresForm.get('address2').touched)\">\n                         {{ error.message }}\n                     </div>\n                 </ng-container>\n                </div>  \n                \n                   <div class=\"form-group m-form__group row topgap\">\n                   <div class=\"col-lg-6 col-md-4\">\n                      <label>\n                      City  \n                      </label>\n                      <input type=\"text\" class=\"form-control m-input\" placeholder=\"Enter City\" name=\"city\" id=\"city\" formControlName=\"city\"  required >\n                      <ng-container *ngFor=\"let error of error_messages.city\">\n                        <div class=\"error-message\" *ngIf=\"addresForm.get('city').hasError(error.type) &&\n                        (addresForm.get('city').dirty || addresForm.get('city').touched)\">\n                            {{ error.message }}\n                        </div>\n                    </ng-container>\n                      <div class=\"clearfix\"></div>\n                         \n\n\n                   </div>\n                   <div class=\"col-lg-6 col-md-4 topgap\">\n                      <label class=\"\">\n                      State \n                      </label>\n                      <input type=\"text\" class=\"form-control m-input\" placeholder=\"Enter state name\" name=\"state\" id=\"state\" formControlName=\"state\" required >\n                       \n                     </div>\n                     <ng-container *ngFor=\"let error of error_messages.state\">\n                        <div class=\"error-message\" *ngIf=\"addresForm.get('state').hasError(error.type) &&\n                        (addresForm.get('state').dirty || addresForm.get('state').touched)\">\n                            {{ error.message }}\n                        </div>\n                    </ng-container>\n                </div>\n                <div class=\"form-group m-form__group row topgap\">\n                   <div class=\"col-lg-6 col-md-4\">\n                      <label>\n                       Country  \n                      </label>\n                      <input type=\"text\" name=\"country\" id=\"country\" class=\"form-control\" required formControlName=\"country\"  >\n                   </div>\n                   <ng-container *ngFor=\"let error of error_messages.country\">\n                     <div class=\"error-message\" *ngIf=\"addresForm.get('country').hasError(error.type) &&\n                     (addresForm.get('country').dirty || addresForm.get('country').touched)\">\n                         {{ error.message }}\n                     </div>\n                 </ng-container>\n                   <div class=\"col-lg-6 col-md-4 topgap\">\n                      <label class=\"\">\n                      postcode \n                      </label>\n                      <input type=\"text\" class=\"form-control m-input\" placeholder=\"Enter postcode\" name=\"postal_code\" id=\"postal_code\" formControlName=\"postal_code\" required >\n                       <div class=\"clearfix\"></div>    \n                   </div>\n                   <ng-container *ngFor=\"let error of error_messages.postal_code\">\n                     <div class=\"error-message\" *ngIf=\"addresForm.get('postal_code').hasError(error.type) &&\n                     (addresForm.get('postal_code').dirty || addresForm.get('postal_code').touched)\">\n                         {{ error.message }}\n                     </div>\n                 </ng-container>\n               </div>\n                <div class=\"form-group m-form__group row topgap\">\n                   \n                   <div class=\"col-lg-6 col-md-4 topgap\">\n                      <label class=\"\">\n                      Mobile Number \n                      </label>\n                      <input type=\"text\" class=\"form-control m-input\" placeholder=\"Enter your mobile number\" name=\"mobile\" id=\"mobile\" formControlName=\"mobile\"  required >\n                   </div>\n                </div>\n                <ng-container *ngFor=\"let error of error_messages.mobile\">\n                  <div class=\"error-message\" *ngIf=\"addresForm.get('mobile').hasError(error.type) &&\n                  (addresForm.get('mobile').dirty || addresForm.get('mobile').touched)\">\n                      {{ error.message }}\n                  </div>\n              </ng-container>\n                 \n                <div class=\"form-group m-form__group row\">\n                   <div class=\"m-radio-inline\" style=\"margin-top: 20px;\">\n                      \n                      <label>\n                      Is Shipping Address Same As Billing Address? \n                      <span></span>\n                      </label>\n                       <label class=\"m-radio\">\n                          <input type=\"radio\" name=\"same\" class=\"same\" id=\"same\" value=\"yes\"  (click)=\"checkvalue($event)\">\n                      Yes\n                      <span></span>\n                      </label>\n                      <label class=\"m-radio\">\n                          <input type=\"radio\" name=\"same\" class=\"same\" id=\"same\" value=\"no\"  (click)=\"checkvalue($event)\">\n                          \n                      No\n                      <span></span>\n                      </label>\n                   </div>\n                </div>\n                 \n                 <div class=\"heading-block nobottomborder topmargin-sm center divcenter mb-0 clearfix\" style=\"max-width: 750px\">\n       <p style=\"font-size: 1 rem;font-weight: 600;\">SHIPPING ADDRESS</p>\n    </div>\n                <div class=\"form-group m-form__group row\">\n                   <div class=\"col-lg-6 col-md-4\">\n                      <label>\n                      First Name\n                      </label>\n                      <input type=\"text\" class=\"form-control m-input\" placeholder=\"Enter first name\" name=\"fnames\" id=\"fnames\" value=\"{{fname==null?null:fname}}\"  required formControlName=\"fnames\" >\n                   </div>\n                   <ng-container *ngFor=\"let error of error_messages.fnames\">\n                     <div class=\"error-message\" *ngIf=\"addresForm.get('fnames').hasError(error.type) &&\n                     (addresForm.get('fnames').dirty || addresForm.get('fnames').touched)\">\n                         {{ error.message }}\n                     </div>\n                 </ng-container>\n                   <div class=\"col-lg-6 col-md-4 topgap\">\n                      <label class=\"\">\n                      Last Name\n                      </label>\n                      <input type=\"text\" class=\"form-control m-input\" placeholder=\"Enter last name\" name=\"lnames\" id=\"lnames\" value=\"{{lname==null?null:lname}}\" formControlName=\"lnames\" required >     \n                   </div>\n                   <ng-container *ngFor=\"let error of error_messages.lnames\">\n                     <div class=\"error-message\" *ngIf=\"addresForm.get('lnames').hasError(error.type) &&\n                     (addresForm.get('lnames').dirty || addresForm.get('lnames').touched)\">\n                         {{ error.message }}\n                     </div>\n                 </ng-container>\n                </div>\n                   <div class=\"form-group m-form__group row topgap\">\n                   <div class=\"col-lg-12 col-md-10\">\n                      <label>\n                        Shipping Address1\n                      </label>\n                     <textarea type=\"text\" rows=\"4\" class=\"form-control\" placeholder=\"Please enter House/Flat Number, Building Name/ Apartment Name\" name=\"address1\" id=\"address1\" value=\"{{address==null?null:address}}\" formControlName=\"address1\" required ></textarea>\n                   </div>\n                  </div>\n                  <ng-container *ngFor=\"let error of error_messages.address1\">\n                     <div class=\"error-message\" *ngIf=\"addresForm.get('address1').hasError(error.type) &&\n                     (addresForm.get('address1').dirty || addresForm.get('address1').touched)\">\n                         {{ error.message }}\n                     </div>\n                 </ng-container>\n                 <div class=\"form-group m-form__group row topgap\">\n                   <div class=\"col-lg-12 col-md-10\">\n                      <label>\n                        Shipping Address2\n                      </label>\n                     <textarea type=\"text\" rows=\"4\" class=\"form-control\" placeholder=\"Please enter Street Name, Locality\" name=\"addresss2\" id=\"addresss2\" value=\"{{address2==null?null:address2}}\" formControlName=\"addresss2\" required ></textarea>                                     \n                   </div>\n                </div>\n                <ng-container *ngFor=\"let error of error_messages.addresss2\">\n                  <div class=\"error-message\" *ngIf=\"addresForm.get('addresss2').hasError(error.type) &&\n                  (addresForm.get('addresss2').dirty || addresForm.get('addresss2').touched)\">\n                      {{ error.message }}\n                  </div>\n              </ng-container>\n                \n                   <div class=\"form-group m-form__group row topgap\">\n                   <div class=\"col-lg-6 col-md-4\">\n                      <label>\n                      City   \n                      </label>\n                      <input type=\"text\" class=\"form-control m-input\" placeholder=\"Enter City\" name=\"city1\" id=\"city1\" value=\"{{city==null?null:city}}\" formControlName=\"city1\" required >\n                       <div class=\"clearfix\"></div>\n                  </div>\n                  <ng-container *ngFor=\"let error of error_messages.city1\">\n                     <div class=\"error-message\" *ngIf=\"addresForm.get('city1').hasError(error.type) &&\n                     (addresForm.get('city1').dirty || addresForm.get('city1').touched)\">\n                         {{ error.message }}\n                     </div>\n                 </ng-container>\n                   <div class=\"col-lg-6 col-md-4 topgap\">\n                      <label class=\"\">\n                      State \n                      </label>\n                      <input type=\"text\" class=\"form-control m-input\" placeholder=\"Enter state name\" name=\"state1\" id=\"state1\" value=\"{{state==null?null:state}}\" formControlName=\"state1\" required >\n                  </div>\n                  <ng-container *ngFor=\"let error of error_messages.state1\">\n                     <div class=\"error-message\" *ngIf=\"addresForm.get('state1').hasError(error.type) &&\n                     (addresForm.get('state1').dirty || addresForm.get('state1').touched)\">\n                         {{ error.message }}\n                     </div>\n                 </ng-container>\n                </div>\n                <div class=\"form-group m-form__group row topgap\">\n                   <div class=\"col-lg-6 col-md-4\">\n                     <label>\n                        Country   \n                        </label>\n                    <input type=\"text\" name=\"country1\" id=\"country1\" class=\"form-control\" value=\"{{country==null?null:country}}\"  formControlName=\"country1\" required>\n                  </div>\n                  <ng-container *ngFor=\"let error of error_messages.country1\">\n                     <div class=\"error-message\" *ngIf=\"addresForm.get('country1').hasError(error.type) &&\n                     (addresForm.get('country1').dirty || addresForm.get('country1').touched)\">\n                         {{ error.message }}\n                     </div>\n                 </ng-container>\n                   <div class=\"col-lg-6 col-md-4 topgap\">\n                      <label class=\"\">\n                      postcode \n                      </label>\n                      <input type=\"text\" class=\"form-control m-input\" placeholder=\"Enter postcode \" name=\"postal_code1\" id=\"postal_code1\" value=\"{{postal_code==null?null:postal_code}}\" formControlName=\"postal_code1\" required >\n                       <div class=\"clearfix\"></div>\n                   </div>\n                   <ng-container *ngFor=\"let error of error_messages.postal_code1\">\n                     <div class=\"error-message\" *ngIf=\"addresForm.get('postal_code1').hasError(error.type) &&\n                     (addresForm.get('postal_code1').dirty || addresForm.get('postal_code1').touched)\">\n                         {{ error.message }}\n                     </div>\n                 </ng-container>\n                </div>\n                \n           <div class=\"form-group m-form__group row topgap\"> \n                   <div class=\"col-lg-6 col-md-4 topgap\">\n                      <label class=\"\">\n                      Mobile Number \n                      </label>\n                      <input type=\"text\" class=\"form-control m-input\" placeholder=\"Enter your mobile number\" name=\"mobile1\" id=\"mobile1\" value=\"{{mobile==null?null:mobile}}\" formControlName=\"mobile1\" required >\n                  </div>\n            </div>\n            <ng-container *ngFor=\"let error of error_messages.mobile1\">\n               <div class=\"error-message\" *ngIf=\"addresForm.get('mobile1').hasError(error.type) &&\n               (addresForm.get('mobile1').dirty || addresForm.get('mobile1').touched)\">\n                   {{ error.message }}\n               </div>\n           </ng-container>\n                \n                <div class=\"m-form__actions m-form__actions\" style=\"text-align: center;\">\n                    <button  type=\"submit\" class=\"btn btn-primary\" (click)=\"addres()\" >\n                   Save\n                   </button>\n                </div>\n             </div>\n          </form>\n       </div>\n       <!-- .postcontent end -->\n    </div>\n </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forgotpassword',\n  templateUrl: './forgotpassword.component.html',\n  styleUrls: ['./forgotpassword.component.css']\n})\nexport class ForgotpasswordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div class=\"container\">\n\t<div class=\"row\">\n\t\t<div class=\"col-md-4 col-md-offset-4\">\n            <div class=\"panel panel-default\">\n              <div class=\"panel-body\">\n                <div class=\"text-center\">\n                  <h3><i class=\"fa fa-lock fa-4x\"></i></h3>\n                  <h2 class=\"text-center\">Forgot Password?</h2>\n                  <p>You can reset your password here.</p>\n                  <div class=\"panel-body\">\n    \n                    <form id=\"register-form\" role=\"form\" autocomplete=\"off\" class=\"form\" method=\"post\">\n    \n                      <div class=\"form-group\">\n                        <div class=\"input-group\">\n                          <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-envelope color-blue\"></i></span>\n                          <input id=\"email\" name=\"email\" placeholder=\"email address\" class=\"form-control\"  type=\"email\">\n                        </div>\n                      </div>\n                      <div class=\"form-group\">\n                        <input name=\"recover-submit\" class=\"btn btn-lg btn-primary btn-block\" value=\"Reset Password\" type=\"submit\">\n                      </div>\n                      \n                      <input type=\"hidden\" class=\"hide\" name=\"token\" id=\"token\" value=\"\"> \n                    </form>\n    \n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\t</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  error_messages: any = {};\n  params: any;\n  constructor(public router: Router,public formBuilder: FormBuilder, private http: HttpClient) {\n    this.setupLoginFormData();\n   }\n\n  ngOnInit(): void {\n  }\n  setupLoginFormData() {\n    this.error_messages = {\n      email: [\n        { type: \"required\", message: 'Email is Required' },\n        { type: \"pattern\", message: 'Please Enter valid Email' }\n      ],\n\n      password: [\n        { type: \"required\", message: 'Password is Required' }\n      ],\n    };\n    this.loginForm = this.formBuilder.group(\n      {\n        email: new FormControl(\n          \"\",\n          Validators.compose([\n            Validators.required,\n            Validators.pattern('^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$'),\n          ])\n        ),\n        password: new FormControl(\n          \"\",\n          Validators.compose([\n            Validators.required,\n          ])\n        ),\n      },\n    );\n  }\n\n  doLogin() {\n    this.params = {\n      \"email\": this.loginForm.value.email,\n      \"password\": this.loginForm.value.password,\n    }\n    return new Promise((resolve, reject) => {\n      this.http.post(\"https://api.80startups.com/auth/loginUser/1\", this.params).subscribe(result => {\n        console.log(result,\"result\");\n        this.router.navigateByUrl('/AddAddress');\n      },\n        err => {\n          console.log(err);\n          alert(\"please enter correct email and password\");\n        }\n      );\n    });\n  }\n\n  register() {\n    console.log(\"register\");\n    this.router.navigateByUrl('/logout');\n  }\n}\n","<div class=\"container\">\n    <form [formGroup]=\"loginForm\">\n        <h1>Login</h1>\n        <hr>\n\n        <label for=\"email\"><b>Email</b></label>\n        <input type=\"text\" placeholder=\"Enter Email\" name=\"email\" id=\"email\" required formControlName=\"email\">\n        <div>\n            <ng-container *ngFor=\"let error of error_messages.email\">\n                <div class=\"error-message\" *ngIf=\"loginForm.get('email').hasError(error.type) &&\n                (loginForm.get('email').dirty || loginForm.get('email').touched)\">\n                    {{ error.message }}\n                </div>\n            </ng-container>\n        </div>\n\n        <label for=\"psw\"><b>Password</b></label>\n        <input type=\"password\" placeholder=\"Enter Password\" name=\"psw\" id=\"psw\" required formControlName=\"password\" >\n\n        <div>\n            <ng-container *ngFor=\"let error of error_messages.password\">\n                <div class=\"error-message\"\n                    *ngIf=\"loginForm.get('password').hasError(error.type) && (loginForm.get('password').dirty || loginForm.get('password').touched)\">\n                    {{ error.message }}\n                </div>\n            </ng-container>\n        </div>\n        <button type=\"submit\" class=\"registerbtn\" (click)=\"doLogin()\">Login</button>\n    </form>\n</div>\n\n<div class=\"container signin\">\n    <p>Don't have an account? <a (click)=\"register()\" style=\"color: red;\">Sign Up</a>.</p>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n  signUpForm: FormGroup;\n  error_messages: any = {};\n  params:any;\n  constructor(public router: Router,\n    public formBuilder: FormBuilder, private http: HttpClient) { \n      this.setupLoginFormData();\n    }\n\n  ngOnInit(): void {\n  }\n  setupLoginFormData() {\n    this.error_messages = {\n\n\n      fname: [\n        { type: \"required\", message: 'First Name is Required' }\n      ],\n      lname: [\n        { type: \"required\", message: 'lname is Required' }\n      ],\n      phone: [\n        { type: \"required\", message: \"Phone Number  is required.\" },\n        { type: \"minlength\", message: \"minimun length should be 10 .\" },\n        { type: \"maxlength\", message: \"maximum length should be 12 .\" }\n      ],\n      mobile: [\n        { type: \"required\", message: \"mobile Number  is required.\" },\n        { type: \"minlength\", message: \"minimun length should be 10 .\" },\n        { type: \"maxlength\", message: \"maximum length should be 12 .\" }\n      ],\n      email: [\n        { type: \"required\", message: 'Email is Required' },\n        { type: \"pattern\", message: 'Please Enter valid Email' }\n      ],\n      \n      password: [\n         { type: \"required\", message: \"Password is Required.\" },\n        { type: \"minlength\", message: \"minimun length should be 8 .\" },\n        { type: \"maxlength\", message: \"maximum length should be 12 .\" }\n      ],\n      project_id:[\n        { type: \"required\", message: \"Password is Required.\" },\n      ]\n      \n      \n     \n\n\n    };\n    this.signUpForm = this.formBuilder.group(\n      {\n        fname: new FormControl(\n          \"\",\n          Validators.compose([\n            Validators.required,\n          ])\n        ),\n        lname: new FormControl(\n          \"\",\n          Validators.compose([\n            Validators.required,\n          ])\n        ),\n        \n        mobile: new FormControl(\n          \"\",\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(10),\n            Validators.maxLength(12)\n          ])\n        ),\n        email: new FormControl(\n          \"\",\n          Validators.compose([\n            Validators.required,\n            Validators.pattern('^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$'),\n          ])\n        ),\n        \n        password: new FormControl(\n          \"\",\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(8),\n            Validators.maxLength(12)\n          ])\n        ),\n        \n        project_id: new FormControl(\n          \"\",\n          Validators.compose([\n            Validators.required,\n            \n          ])\n        ),\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n  \n      },\n    );\n  }\n\n\n  doRegister() {\n\n\n    this.params = {\n      \"fname\": this.signUpForm.value.fname,\n      \"lname\": this.signUpForm.value.lname,\n      \"mobile\": this.signUpForm.value.mobile,\n      \n      \"email\": this.signUpForm.value.email,\n      \"password\": this.signUpForm.value.password,\n      \"project_id\": 1,\n\n      \n      \n    }\n    return new Promise((resolve, reject) => {\n      this.http.post(\"https://api.80startups.com/user/createUser\", this.params).subscribe(result => {\n        console.log(\"result\", result);\n        this.router.navigateByUrl('/login')\n      },\n        err => {\n          console.log(err);\n          alert(\"please enter email and password\");\n          // reject(err);\n        }\n      );\n    });\n  }\n\n  signin(){\n    this.router.navigateByUrl('/login');\n  }\n\n}\n","<div class=\"container\">\n    <h1>Register</h1>\n    <p>Please fill in this form to create an account.</p>\n    <hr>\n    <form [formGroup]=\"signUpForm\">\n        <label for=\"firstname\"><b>First Name</b></label>\n        <input type=\"text\" placeholder=\"Enter First Name\" name=\"fname\" id=\"fname\" required\n            formControlName=\"fname\">\n\n        <div>\n            <ng-container *ngFor=\"let error of error_messages.fname\">\n                <div class=\"error-message\" *ngIf=\"signUpForm.get('fname').hasError(error.type) &&\n        (signUpForm.get('fname').dirty || signUpForm.get('fname').touched)\">\n                    {{ error.message }}\n                </div>\n            </ng-container>\n        </div>\n\n\n        <label for=\"lastname\"><b>Last Name</b></label>\n        <input type=\"text\" placeholder=\"Enter Last Name\" name=\"lname\" id=\"lname\" required\n            formControlName=\"lname\">\n\n        <div>\n            <ng-container *ngFor=\"let error of error_messages.lname\">\n                <div class=\"error-message\" *ngIf=\"signUpForm.get('lname').hasError(error.type) &&\n        (signUpForm.get('lname').dirty || signUpForm.get('lname').touched)\">\n                    {{ error.message }}\n                </div>\n            </ng-container>\n        </div>\n\n        \n\n        <label for=\"phone\"><b>mobile</b></label>\n        <input type=\"text\" placeholder=\"Enter mobile\" name=\"mobile\" id=\"mobile\" required formControlName=\"mobile\">\n\n        <div>\n            <ng-container *ngFor=\"let error of error_messages.mobile\">\n                <div class=\"error-message\" *ngIf=\"signUpForm.get('mobile').hasError(error.type) &&\n        (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched)\">\n                    {{ error.message }}\n                </div>\n            </ng-container>\n        </div>\n\n        \n\n\n        <label for=\"email\"><b>Email</b></label>\n        <input type=\"text\" placeholder=\"Enter Email\" name=\"email\" id=\"email\" required formControlName=\"email\">\n\n        <div>\n            <ng-container *ngFor=\"let error of error_messages.email\">\n                <div class=\"error-message\" *ngIf=\"signUpForm.get('email').hasError(error.type) &&\n        (signUpForm.get('email').dirty || signUpForm.get('email').touched)\">\n                    {{ error.message }}\n                </div>\n            </ng-container>\n        </div>\n\n        \n\n\n        <label for=\"password\"><b>Password</b></label>\n        <input type=\"password\" placeholder=\"Enter Password\" name=\"psw\" id=\"psw\" required formControlName=\"password\">\n\n        <div>\n            <ng-container *ngFor=\"let error of error_messages.password\">\n                <div class=\"error-message\" *ngIf=\"signUpForm.get('password').hasError(error.type) &&\n        (signUpForm.get('password').dirty || signUpForm.get('password').touched)\">\n                    {{ error.message }}\n                </div>\n            </ng-container>\n        </div>\n         \n        \n        <input type=\"hidden\" placeholder=\"enter the project_id \" name=\"psw\" id=\"psw\" required formControlName=\"project_id\">\n        \n         \n        \n        \n        \n\n        \n        \n        \n        \n        \n        <p>By creating an account you agree to our <a href=\"#\">Terms & Privacy</a>.</p>\n\n        <button type=\"submit\" class=\"registerbtn\" (click)=\"doRegister()\">Register</button>\n        </form>\n</div>\n\n<div class=\"container signin\">\n\n    <p>Already have an account? <a (click)=\"signin()\" style=\"color: red;\">Sign in</a>.</p>\n\n</div>","import { NgModule, Component } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddAddressComponent } from './admin/add-address/add-address.component';\nimport { DashboradComponent } from './dashboradPanel/dashborad/dashborad.component';\nimport { LoginComponent } from './admin/login/login.component';\nimport { LogoutComponent } from './admin/logout/logout.component';\nimport { ForgotpasswordComponent } from './admin/forgotpassword/forgotpassword.component';\nimport { PickupComponent } from './dashboradPanel/pickup/pickup.component';\nconst routes: Routes = [\n  {\n    path: 'AddAddress', component: AddAddressComponent\n  },\n  {\n    path: 'login', component: LoginComponent \n  },\n  {\n    path: 'logout', component: LogoutComponent\n  },\n  {\n    path: 'forgotpassword', component: ForgotpasswordComponent\n  },\n  {\n     path: 'pickup' ,component: PickupComponent\n  },\n  {\n    path:'DashBorad', component : DashboradComponent\n  },\n  {\n    path: '', redirectTo: '/login', pathMatch: 'full'\n}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'userpanel';\n}\n","\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n//import { HttpClient } from \"@angular/common/http\";\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AddAddressComponent } from './admin/add-address/add-address.component';\nimport { DashboradComponent } from './dashboradPanel/dashborad/dashborad.component';\nimport { LoginComponent } from './admin/login/login.component';\nimport { LogoutComponent } from './admin/logout/logout.component';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { ForgotpasswordComponent } from './admin/forgotpassword/forgotpassword.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { PickupComponent } from './dashboradPanel/pickup/pickup.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddAddressComponent,\n    DashboradComponent,\n    LoginComponent,\n    LogoutComponent,\n    ForgotpasswordComponent,\n    PickupComponent,\n    \n    //HttpClientModule,\n    //HttpClient,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n     HttpClientModule,\n     BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashborad',\n  templateUrl: './dashborad.component.html',\n  styleUrls: ['./dashborad.component.css']\n})\nexport class DashboradComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"m-grid__item m-grid__item--fluid  m-grid m-grid--ver-desktop m-grid--desktop    m-container m-container--responsive m-container--xxl m-page__container m-body\">\n            <div class=\"m-grid__item m-grid__item--fluid m-wrapper\">\n               <!-- BEGIN: Subheader -->\n               \n               \n                <div class=\"m-content\">\n                  <div class=\"row\">\n                     <div class=\"col-xl-6\">\n                        \n                        <!--begin:: Widgets/Blog-->\n                        <div class=\"m-portlet m-portlet--bordered-semi m-portlet--space m-portlet--full-height \">\n                           <div class=\"m-portlet__head\">\n                              <div class=\"m-portlet__head-caption\">\n                                 <div class=\"m-portlet__head-title\">\n                                    <h3 class=\"m-portlet__head-text\" style=\"font-family: 'Montserrat', sans-serif;\">\n                                       Wallet Balance\n                                       <span class=\"m-portlet__head-desc\">\n                                       </span>\n                                    </h3>\n                                 </div>\n                              </div>\n                           </div>\n                           <div class=\"m-portlet__body\">\n                              <div class=\"m-widget25\">\n                                 <span class=\"m-widget25__price m--font-brand\" style=\"text-align: center;display: block;font-size:70px;\">\n                                 <i class=\"fa fa-inr\" style=\"font-size:60px!important;\"></i> 0                                 </span>\n                                 <br>\n                                 <span class=\"m-widget25__desc\" style=\"text-align: center;display: block;\">\n                                 Total wallet balance.\n                                 </span>\n                                 <div class=\"m-widget25--progress\" style=\"text-align: center;\">\n                                    <div class=\"m-widget25__progress\">\n                                       <button type=\"button\" class=\"btn m-btn--pill m-btn--air btn-primary btn-lg\" data-toggle=\"modal\" data-target=\"#m_modal_4\">\n                                       Add to Wallet\n                                       </button>\n                                       <div class=\"m--space-10\"></div>\n                                    </div>\n                                    <div class=\"m-widget25__progress\">\n                                       <a  class=\"btn m-btn--pill m-btn--air btn-primary btn-lg\">History</a>\n                                       <div class=\"m--space-10\"></div>\n                                       \n                                    </div>\n                                 </div>\n                              </div>\n                           </div>\n                        </div>\n                     </div>\n                     <div class=\"col-xl-6\">\n                        <div class=\"m-portlet m-portlet--head-overlay m-portlet--full-height   m-portlet--rounded-force\">\n                           <div class=\"m-portlet__head m-portlet__head--fit\" style=\"background-color: #00adef !important;\">\n                              <div class=\"m-portlet__head-caption\">\n                                 <div class=\"m-portlet__head-title\">\n                                    <h3 class=\"m-portlet__head-text m--font-light\" style=\"font-family: 'Montserrat', sans-serif;\">\n                                       Your Indian Address\n                                    </h3>\n                                 </div>\n                              </div>\n                           </div>\n                           <div class=\"m-portlet__body\">\n                              <div class=\"m-widget28\">\n                                 <div class=\"m-widget28__pic m-portlet-fit--sides\" style=\"min-height: 65px;\"></div>\n                                 <div class=\"m-widget28__container\">\n                                    <!-- begin::Tab Content -->\n                                    <div class=\"m-widget28__tab tab-content\">\n                                       <div id=\"menu11\" class=\"m-widget28__tab-container tab-pane active\">\n                                          <div class=\"m-widget28__tab-items\">\n                                             <div class=\"m-widget28__tab-item\">\n                                                <span><span style=\"margin-right: 10px;\"><i class=\"flaticon-avatar\"></i></span>\n                                                \n                                                </span>\n                                             </div>\n                                             \n                                             <div class=\"m-widget28__tab-item\">\n                                                <span><span style=\"margin-right: 10px;\"><i class=\"flaticon-map-location\"></i></span>\n                                               Ramdas Dagale, Plot no 12 , survey no 253/2/2\n                                                </span>\n                                             </div>\n                                             <div class=\"m-widget28__tab-item\">\n                                                <span><span style=\"margin-right: 10px;\"><i class=\"flticon-placeholder-2\"></i></span>\n                                                Near skumar bakery Lohegaon\n                                                </span>\n                                             </div>\n                                             <div class=\"m-widget28__tab-item\">\n                                                <span><span style=\"margin-right: 10px;\"><i class=\"flaticon-placeholder-2\"></i></span>\n                                                Pune, 411032\n                                                </span>\n                                             </div>\n                                             <div class=\"m-widget28__tab-item\">\n                                                <span><span style=\"margin-right: 10px;\"><i class=\"flaticon-placeholder-2\"></i></span>\n                                                 Mobile: +91 8074393145\n                                                </span>\n                                             </div>\n                                             \n                                             <div class=\"m-widget28__tab-item\">\n                                             </div>\n                                          </div>\n                                       </div>\n                                       \n                                       \n                                    </div>\n                                 </div>\n                              </div>\n                           </div>\n                        </div>\n                     </div>\n                  </div>\n                  <div class=\"m-portlet \">\n                     <div class=\"m-portlet__body  m-portlet__body--no-padding\">\n                        <div class=\"row m-row--no-padding m-row--col-separator-xl\">\n                           <div class=\"col-md-12 col-lg-6 col-xl-3\">\n                              <div class=\"m-widget24\">\n                                 <div class=\"m-widget24__item\">\n                                    <h4 class=\"m-widget24__title\">\n                                        <span style=\"margin-right: 5px;size: 20px;\">\n                                            <i class=\"flaticon-truck m--font-brand\" style=\"font-size: 25px !important;\"></i></span>\n                                       Products in Warehouse\n                                    </h4>\n                                    <br>\n                                    <span class=\"m-widget24__desc\">\n                                    No. of Orders\n                                    </span>\n                                    <span class=\"m-widget24__stats m--font-info\">\n                                    0                                    </span>\n                                    <div class=\"m--space-10\"></div>\n                                    <div class=\"progress m-progress--sm\">\n                                       <div class=\"progress-bar m--bg-info\" role=\"progressbar\" style=\"width: 100%;\" aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                                    </div>\n                                    <span class=\"m-widget24__change\">\n                                    \n                                    <a  class=\"btn btn-primary\" style=\"width: 80px;\">Visit</a>\n                                    \n                                       \n                                    </span>\n                                    <span class=\"m-widget24__number\">\n                                    </span>\n                                 </div>\n                              </div>\n                           </div>\n                           <div class=\"col-md-12 col-lg-6 col-xl-3\">\n                              <div class=\"m-widget24\">\n                                 <div class=\"m-widget24__item\">\n                                    <h4 class=\"m-widget24__title\"><span style=\"margin-right: 5px;size: 20px;\"><i class=\"flaticon-time-3 m--font-brand\" style=\"font-size: 25px !important;\"></i></span>\n                                       Orders in Progress\n                                    </h4>\n                                    <br>\n                                    <span class=\"m-widget24__desc\">\n                                    No. of Orders\n                                    </span>\n                                    <span class=\"m-widget24__stats m--font-info\">\n                                    0                                    </span>\n                                    <div class=\"m--space-10\"></div>\n                                    <div class=\"progress m-progress--sm\">\n                                       <div class=\"progress-bar m--bg-info\" role=\"progressbar\" style=\"width: 100%;\" aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                                    </div>\n                                    <span class=\"m-widget24__change\">\n                                    <a  class=\"btn btn-primary\" style=\"width: 80px;\">Visit</a>    \n                                    </span>\n                                    <span class=\"m-widget24__number\">\n                                    </span>\n                                 </div>\n                              </div>\n                           </div>\n                           <div class=\"col-md-12 col-lg-6 col-xl-3\">\n                              <div class=\"m-widget24\">\n                                 <div class=\"m-widget24__item\">\n                                    <h4 class=\"m-widget24__title\"><span style=\"margin-right: 5px;size: 20px;\"><i class=\"flaticon-interface-1 m--font-brand\" style=\"font-size: 25px !important;\"></i></span>\n                                       Ready to Ship\n                                    </h4>\n                                    <br>\n                                    <span class=\"m-widget24__desc\">\n                                    No. of Orders\n                                    </span>\n                                    <span class=\"m-widget24__stats m--font-info\">\n                                    0                                    </span>\n                                    <div class=\"m--space-10\"></div>\n                                    <div class=\"progress m-progress--sm\">\n                                       <div class=\"progress-bar m--bg-info\" role=\"progressbar\" style=\"width: 100%;\" aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                                    </div>\n                                    <span class=\"m-widget24__change\">\n                                    \n                                      <a  class=\"btn btn-primary\" style=\"width: 80px;\">Visit</a>    \n                                    </span>\n                                    <span class=\"m-widget24__number\">\n                                    </span>\n                                 </div>\n                              </div>\n                           </div>\n                           <div class=\"col-md-12 col-lg-6 col-xl-3\">\n                              <div class=\"m-widget24\">\n                                 <div class=\"m-widget24__item\">\n                                    <h4 class=\"m-widget24__title\"><span style=\"margin-right: 5px;size: 20px;\"><i class=\"flaticon-paper-plane m--font-brand\" style=\"font-size: 25px !important;\"></i></span>\n                                       Sent Parcels\n                                    </h4>\n                                    <br>\n                                    <span class=\"m-widget24__desc\">\n                                    No. of Orders\n                                    </span>\n                                    <span class=\"m-widget24__stats m--font-info\">\n                                   0                                    </span>\n                                    <div class=\"m--space-10\"></div>\n                                    <div class=\"progress m-progress--sm\">\n                                       <div class=\"progress-bar m--bg-info\" role=\"progressbar\" style=\"width: 100%;\" aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                                    </div>\n                                    <span class=\"m-widget24__change\">\n                                    \n                                      <a  class=\"btn btn-primary\" style=\"width: 80px;\">Visit</a>     \n                                    </span>\n                                    <span class=\"m-widget24__number\">\n                                    </span>\n                                 </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pickup',\n  templateUrl: './pickup.component.html',\n  styleUrls: ['./pickup.component.css']\n})\nexport class PickupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div class=\"container clearfix py-5\">\n    <div class=\"m-portlet__head\">\n        <div class=\"m-portlet__head-caption\">\n           <div class=\"m-portlet__head-title\">\n              <h3 class=\"m-portlet__head-text\">\n                 Fill in the following details to place pickup request.\n              </h3>\n           </div>\n        </div>\n    </div>\n     \n    <div class=\"container clearfix divcenter\" style=\"max-width: 900px;\">\n       <div class=\" nobottommargin\">\n          <form class=\"m-form m-form--fit m-form--label-align-right m-form--group-seperator-dashed\" autocomplete=\"off\"  >\n             <div class=\"m-portlet__body\">\n                <div class=\"form-group m-form__group row\">\n                    <div class=\"m-radio-inline\" style=\"margin-top: 15px;\">\n                       <span class=\"m-badge m-badge--primary m-badge--wide m-badge--rounded\" style=\"margin-left: 10px; font-size: 1.2rem;font-family: 'Montserrat'; width: 200px;padding: 12px; background-color:burlywood; \">\n                             Pickup Address\n                       </span><br>\n                        <div style=\"margin-top:25px; margin-left:15px;color:#db1a20;\"><p>All fields are mandatory</p></div>\n                    </div>\n                 </div>\n                 \n                <div class=\"form-group m-form__group row\">\n                    \n                   <div class=\"col-lg-6 col-md-4\">\n                        \n                      <label>\n                      First Name: \n                      </label>\n                      <input type=\"text\" class=\"form-control m-input\" placeholder=\"Enter first name\" name=\"fname\" id=\"fname\"   required >\n                  </div>\n                  \n                   <div class=\"col-lg-6 col-md-4 topgap\">\n                      <label class=\"\">\n                      SurName: \n                      </label>\n                      <input type=\"text\" class=\"form-control m-input\" placeholder=\"Enter last name\" name=\"lname\" id=\"lname\"  required >\n                     </div>\n                     \n                </div>\n               <div class=\"form-group m-form__group row topgap\">\n                   <div class=\"col-lg-12 col-md-10\">\n                      <label>\n                        address \n                      </label>\n                     <textarea type=\"text\" rows=\"4\" class=\"form-control\" placeholder=\"Please enter House/Flat Number, Building Name/ Apartment Name\" name=\"address\" id=\"address\"  required ></textarea>\n                                                         \n                   </div>\n                   \n                </div>\n               <div class=\"form-group m-form__group row topgap\">\n                   <div class=\"col-lg-12 col-md-10\">\n                      <label>\n                     2nd address \n                      </label>\n                     <textarea type=\"text\" rows=\"4\" class=\"form-control\" placeholder=\"Please enter Street Name, Locality\" name=\"address2\" id=\"address2\" required ></textarea>\n                                                         \n                   </div>\n                   \n                </div>  \n                \n                   <div class=\"form-group m-form__group row topgap\">\n                   <div class=\"col-lg-6 col-md-4\">\n                      <label>\n                      City  \n                      </label>\n                      <input type=\"text\" class=\"form-control m-input\" placeholder=\"Enter City\" name=\"city\" id=\"city\"   required >\n                      \n                      <div class=\"clearfix\"></div>\n                         \n\n\n                   </div>\n                   <div class=\"col-lg-6 col-md-4 topgap\">\n                      <label class=\"\">\n                      State \n                      </label>\n                      <input type=\"text\" class=\"form-control m-input\" placeholder=\"Enter state name\" name=\"state\" id=\"state\"  required >\n                       \n                     </div>\n                     \n                </div>\n                <div class=\"form-group m-form__group row topgap\">\n                   <div class=\"col-lg-6 col-md-4\">\n                      <label>\n                       Country  \n                      </label>\n                      <input type=\"text\" name=\"country\" id=\"country\" class=\"form-control\" required   >\n                   </div>\n                   \n                   <div class=\"col-lg-6 col-md-4 topgap\">\n                      <label class=\"\">\n                      postcode \n                      </label>\n                      <input type=\"text\" class=\"form-control m-input\" placeholder=\"Enter postcode\" name=\"postal_code\" id=\"postal_code\"  required >\n                       <div class=\"clearfix\"></div>    \n                   </div>\n                   \n               </div>\n               <div class=\"form-group m-form__group row topgap\">\n                <div class=\"col-lg-6 col-md-4\">\n                   <label>\n                    Mobile  \n                   </label>\n                   <input type=\"text\" placeholder=\"Enter mobile number\" name=\"mobile\" id=\"mobile\" class=\"form-control\" required   >\n                </div>\n                \n                <div class=\"col-lg-6 col-md-4 topgap\">\n                   <label class=\"\">\n                   Email \n                   </label>\n                   <input type=\"text\" class=\"form-control m-input\" placeholder=\"Enter Email Adddress\" name=\"email\" id=\"email\"  required >\n                    <div class=\"clearfix\"></div>    \n                </div>\n                \n            </div>\n            <br>\n            <br>\n            <div class=\"form-group m-form__group row\">\n                <div class=\"m-radio-inline\" style=\"margin-top: 15px;\">\n                   <span class=\"m-badge m-badge--primary m-badge--wide m-badge--rounded\" style=\"margin-left: 10px; font-size: 1.2rem;font-family: 'Montserrat'; width: 200px;padding: 12px; background-color:burlywood; \">\n                         Parcel Information\n                   </span>\n                </div>\n             </div>    \n                 <br>\n                 <br>\n                <div class=\"form-group m-form__group row\">\n                 <div class=\"col-lg-6 col-md-4\">\n                    <label>\n                        Weight of the parcel \n                    </label>\n                    <input type=\"text\" pattern=\"^\\d*(\\.\\d{0,2})?$\" title=\"required numeric value\" class=\"form-control m-input\" placeholder=\"Enter Weight in kg\" name=\"weight\" id=\"weight\" value=\"\">\n                  </div>\n                  <div class=\"col-lg-2 col-md-2 topgap\">\n                    <label class=\"\">\n                    Dimensions \n                    </label>\n                    <input type=\"text\" pattern=\"^\\d*(\\.\\d{0,2})?$\" title=\"required numeric value\" class=\"form-control m-input\" placeholder=\"Enter Length \" name=\"length\" id=\"length\" value=\"\">\n                  </div>\n                 <div class=\"col-lg-2 col-md-2 topgap\">\n                    <label class=\"\">\n                     Width in cm\n                    </label>\n                    <input type=\"text\" pattern=\"^\\d*(\\.\\d{0,2})?$\" title=\"required numeric value\" class=\"form-control m-input\" placeholder=\"Enter Width \" name=\"width\" id=\"width\" value=\"\">\n                  </div>\n                 <div class=\"col-lg-2 col-md-2 topgap\">\n                    <label class=\"\">\n                    Height in cm\n                    </label>\n                    <input type=\"text\" class=\"form-control m-input\" placeholder=\"Enter Height \" name=\"height\" id=\"height\" value=\"\">\n                 </div>   \n                </div>\n                   <div class=\"form-group m-form__group row topgap\">\n                   <div class=\"col-lg-12 col-md-10\">\n                    <label>\n                        Contents of the parcel\n                    </label>\n                    <textarea class=\"form-control m-input\" placeholder=\"Enter contents\" name=\"package_items\" id=\"package_items\" rows=\"3\"></textarea>  \n                   </div>\n                  </div>\n                 \n                 <div class=\"form-group m-form__group row topgap\">\n                   <div class=\"col-lg-12 col-md-10\">\n                    <label>\n                        Value of contents in <i class=\"fa fa-inr\"></i>\n                    </label>\n                        <textarea class=\"form-control m-input\" placeholder=\"Enter contents value\" name=\"no_of_packages\" id=\"no_of_packages\" rows=\"3\"></textarea>     \n                   </div>\n                </div>\n            \n                <div class=\"m-form__actions m-form__actions\" style=\"text-align: center;\">\n                    <button class=\"btn btn-warning m-btn m-btn--custom m-btn--icon\" id=\"shedule_data\" data-wizard-action=\"next\">\n                    <span>\n                    <span>\n                    Fetch Price\n                    </span> &nbsp;&nbsp;\n                    <i class=\"la la-arrow-right\"></i>\n                    </span>\n                    </button>\n                </div>\n             </div>\n          </form>\n       </div>\n       <!-- .postcontent end -->\n    </div>\n </div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}